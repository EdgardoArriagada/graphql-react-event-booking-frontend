{"version":3,"sources":["Store/Reducers/ui.reducer.tsx","Store/Reducers/auth.reducer.tsx","Store/Reducers/events.reducer.tsx","Store/Reducers/bookings.reducer.tsx","Store/Store.tsx","shared/styles/styles.tsx","config.ts","components/sharedComponents/AppSnackbar.tsx","components/Auth/Auth.tsx","components/sharedComponents/AppModalContent.tsx","components/Events/EventModalContent.tsx","components/Events/EventsList/EventItem.tsx","components/Events/EventsList/EventsList.tsx","components/Events/Events.tsx","components/Bookings/BookingsList/BookingItem.tsx","components/Bookings/BookingsList/BookingsList.tsx","components/Bookings/Bookings.tsx","components/Navigation/DrawerToggleButton.tsx","components/Navigation/NavigationItems.tsx","components/Navigation/MainNavigation.tsx","components/Navigation/SideDrawer.tsx","components/Backdrop/Backdrop.tsx","App.tsx","index.tsx"],"names":["initialUIState","isSideDrawOpen","UIReducer","state","action","type","initialAuthState","token","userId","tokenExpiration","AuthReducer","initialEventsState","events","status","EventsReducer","Object","toConsumableArray","concat","objectSpread","event","eventsWithoutModifiedOne","filter","_id","initialBookingsState","bookings","BookingsReducer","booking","bookingId","StateContext","createContext","useStateValue","useContext","appClasses","primaryButton","margin","modalCentered","top","left","transform","card","width","maxWidth","display","flexDirection","alignItems","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","configVars","production","BACKEND_URL","development","config","process","getGraphqlUrl","this","withStyles","close","padding","spacing","unit","_ref","classes","props","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","snackbarOpen","setSnackbarOpen","message","duration","centered","handleClose","useEffect","undefined","setTimeout","react_default","a","createElement","Fragment","index_es","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","id","color","aria-label","onClick","className","key","AuthPage","_isActive","AuthDispatch","isLoginForm","setIsLogInForm","_useState3","_useState4","snackbarState","setSnackbarState","_useState5","_useState6","progress","setProgress","inputEmail","useRef","inputPassword","submitHandler","asyncToGenerator","regenerator_default","mark","_callee","email","password","signUpData","loginData","wrap","_context","prev","next","preventDefault","current","value","trim","abrupt","query","axios","url","method","data","headers","Content-Type","then","res","resData","login","_resData$login","createUser","catch","err","finally","stop","_x","apply","arguments","LinearProgress_default","variant","style","opacity","onSubmit","htmlFor","ref","Button_default","disabled","_","sharedComponents_AppSnackbar","showSnackBar","paper","position","backgroundColor","background","boxShadow","shadows","outline","children","header","content","actions","_useStateValue","AuthState","EventsDispatch","Date","selectedDayOfTeYear","handleDayOfTheYearChange","selectedTime","handleTimeChange","eventToModify","title","inputTitleValue","setInputTitleValue","_useState7","description","_useState8","inputDescriptionValue","setInputDescriptionValue","_useState9","price","_useState10","inputPriceValue","setInputPriceValue","onChangeFunction","seter","currentTarget","dateToMap","date","sharedComponents_AppModalContent","classNames","toString","Error","modifiedDate","setDayOfYear","getDayOfYear","setHours","getHours","setMinutes","getMinutes","toISOString","constructDate","console","log","requestBody","Axios","Authorization","modifyEvent","closeModal","alert","label","onChange","material_ui_pickers_esm","utils","DateFNSUtils","keyboard","clearable","keyboardIcon","icons_index_es","cardContent","justifyContent","flexWrap","cardContentItem","flex","cardHeader","cardDescription","marginRight","cardActions","isModalOpen","setModalOpen","_detailsHandler","_bookEventHandler","_callee2","_context2","userLoggedIn","bookEvent","Boolean","isThisUser","creator","fontSize","gutterBottom","toLocaleString","Events_EventModalContent","textAlign","EventsState","EventsList","length","map","EventsList_EventItem","fab","right","bottom","Fab_default","Add_default","Events_EventsList_EventsList","BookingsDispatch","_deleteBookingHandler","_handleDetailsClick","BookingsState","BookingsList","BookingsList_BookingItem","Bookings_BookingsList_BookingsList","DrawerToggleButton","UIDisptch","NavigationItems","react_router_dom","to","root","flexGrow","grow","menuButton","marginLeft","anchorEl","setAnchorEl","isMenuOpen","_handleLogout","closeMenu","_handleProfileClick","renderMenu","Menu_default","MenuItem_default","AppBar_default","Navigation_DrawerToggleButton","Navigation_NavigationItems","IconButton_default","AccountCircle_default","SideDrawer","sideDrawerClasses","UIState","push","join","Backdrop","App","backdrop","components_Backdrop_Backdrop","Navigation_MainNavigation","Navigation_SideDrawer","react_router","from","exact","path","component","BookingsPage","EventsPage","ReactDOM","render","styles","_useReducer","useReducer","_useReducer2","_useReducer3","_useReducer4","_useReducer5","_useReducer6","_useReducer7","_useReducer8","MainStore","Provider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.025edfe6.chunk.js","sourcesContent":["import { Dispatch } from 'react';\n\nexport interface UIStore {\n    UIState: UIState;\n    UIDisptch: Dispatch<UIActions>;\n}\n\nexport interface UIState {\n    isSideDrawOpen: boolean;\n}\n\nexport const initialUIState = { isSideDrawOpen: false };\n\nexport const UIReducer = (state: UIState, action: UIActions) => {\n    switch (action.type) {\n        case 'UI_TOGGLE_SIDE_NAV':\n            return { isSideDrawOpen: !state.isSideDrawOpen };\n        default:\n            return state || initialUIState;\n    }\n};\n\n//Actions\ninterface UIToggleSideNav {\n    type: 'UI_TOGGLE_SIDE_NAV';\n}\n\ntype UIActions = UIToggleSideNav;\n","import { Dispatch } from 'react';\n\nexport interface AuthStore {\n    AuthState: AuthState;\n    AuthDispatch: Dispatch<AuthActions>;\n}\n\nexport interface AuthState {\n    userId: string | null;\n    token: string | null;\n    tokenExpiration: number | null;\n}\n\nexport const initialAuthState: AuthState = { token: null, userId: null, tokenExpiration: null };\n\nexport const AuthReducer = (state: AuthState, action: AuthActions): AuthState => {\n    switch (action.type) {\n        case 'AUTH_LOG_IN':\n            const { token, userId, tokenExpiration } = action;\n            return { token, userId, tokenExpiration };\n        case 'AUTH_LOG_OUT':\n            return initialAuthState;\n        default:\n            return state || initialAuthState;\n    }\n};\n\n// Actions\ninterface AuthLogIn {\n    type: 'AUTH_LOG_IN';\n    userId: AuthState['userId'];\n    token: AuthState['token'];\n    tokenExpiration: AuthState['tokenExpiration'];\n}\n\ninterface AuthLogOut {\n    type: 'AUTH_LOG_OUT';\n}\n\ntype AuthActions = AuthLogIn | AuthLogOut;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\n\nexport interface EventsStore {\n    EventsState: EventsState;\n    EventsDispatch: Dispatch<EventsActions>;\n}\n\nexport interface Event {\n    _id: string;\n    title: string;\n    description: string;\n    price: number;\n    date: string;\n    creator: Array<any>;\n}\n\nexport interface EventsState {\n    status: Status;\n    events: Array<Event>;\n}\n\nexport const initialEventsState: EventsState = { events: [], status: 'PRISTINE' };\n\nexport const EventsReducer = (state: EventsState, action: EventsActions): EventsState => {\n    switch (action.type) {\n        case 'FETCH_EVENTS_PENDING':\n        case 'CREATE_EVENT_PENDING':\n        case 'MODIFY_EVENT_PENDING':\n            return { events: [...state.events], status: 'PENDING' };\n        case 'FETCH_EVENTS_FULFILLED':\n            return { events: [...action.events], status: 'FULFILLED' };\n        case 'CREATE_EVENT_FULFILLED':\n            return { events: [...state.events, { ...action.event }], status: 'FULFILLED' };\n        case 'MODIFY_EVENT_FULFILLED':\n            const eventsWithoutModifiedOne = state.events.filter(event => action.event._id !== event._id);\n            return { events: [...eventsWithoutModifiedOne, { ...action.event }], status: 'FULFILLED' };\n        case 'FETCH_EVENTS_REJECTED':\n        case 'CREATE_EVENT_REJECTED':\n        case 'MODIFY_EVENT_REJECTED':\n            return { events: [...state.events], status: 'REJECTED' };\n        default:\n            return state || initialEventsState;\n    }\n};\n\n// Actions\ninterface FetchEventsPending {\n    type: 'FETCH_EVENTS_PENDING';\n}\n\ninterface EventPending {\n    type: 'CREATE_EVENT_PENDING' | 'MODIFY_EVENT_PENDING';\n}\n\ninterface FetchEventsRejected {\n    type: 'FETCH_EVENTS_REJECTED';\n}\n\ninterface EventRejected {\n    type: 'CREATE_EVENT_REJECTED' | 'MODIFY_EVENT_REJECTED';\n}\n\ninterface FetchEventsFulfilled {\n    type: 'FETCH_EVENTS_FULFILLED';\n    events: EventsState['events'];\n}\n\ninterface EventFulfilled {\n    type: 'CREATE_EVENT_FULFILLED' | 'MODIFY_EVENT_FULFILLED';\n    event: Event;\n}\n\ntype EventsActions =\n    | FetchEventsPending\n    | EventPending\n    | FetchEventsRejected\n    | EventRejected\n    | FetchEventsFulfilled\n    | EventFulfilled;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\nimport { IBooking } from '../../shared/models/booking.model';\n\nexport interface BookingsStore {\n    BookingsState: BookingsState;\n    BookingsDispatch: Dispatch<BookingsActions>;\n}\n\nexport interface BookingsState {\n    status: Status;\n    bookings: Array<IBooking>;\n}\n\nexport const initialBookingsState: BookingsState = { bookings: [], status: 'PRISTINE' };\n\nexport const BookingsReducer = (state: BookingsState, action: BookingsActions): BookingsState => {\n    switch (action.type) {\n        case 'FETCH_BOOKINGS_PENDING':\n        case 'CANCEL_BOOKINGS_PENDING':\n            return { bookings: [...state.bookings], status: 'PENDING' };\n        case 'FETCH_BOOKINGS_FULFILLED':\n            return { bookings: [...action.bookings], status: 'FULFILLED' };\n        case 'CANCEL_BOOKINGS_FULFILLED':\n            const updatedBookings = state.bookings.filter(booking => action.bookingId !== booking._id);\n            return { bookings: updatedBookings, status: 'FULFILLED' };\n        case 'FETCH_BOOKINGS_REJECTED':\n        case 'CANCEL_BOOKINGS_REJECTED':\n            return { bookings: [...state.bookings], status: 'REJECTED' };\n        default:\n            return state || initialBookingsState;\n    }\n};\n\n// Actions\ninterface BookingsPending {\n    type: 'FETCH_BOOKINGS_PENDING' | 'CANCEL_BOOKINGS_PENDING';\n}\n\ninterface bookingsRejected {\n    type: 'FETCH_BOOKINGS_REJECTED' | 'CANCEL_BOOKINGS_REJECTED';\n}\ninterface fetchBookingsFulfilled {\n    type: 'FETCH_BOOKINGS_FULFILLED';\n    bookings: BookingsState['bookings'];\n}\ninterface cancelBookingsFulfilled {\n    type: 'CANCEL_BOOKINGS_FULFILLED';\n    bookingId: IBooking['_id'];\n}\n\ntype BookingsActions = BookingsPending | bookingsRejected | fetchBookingsFulfilled | cancelBookingsFulfilled;\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialUIState, UIReducer, UIStore } from './Reducers/ui.reducer';\nimport { initialAuthState, AuthReducer, AuthStore } from './Reducers/auth.reducer';\nimport { EventsStore, initialEventsState, EventsReducer } from './Reducers/events.reducer';\nimport { BookingsStore, initialBookingsState, BookingsReducer } from './Reducers/bookings.reducer';\n\ntype MainStore = UIStore & AuthStore & EventsStore & BookingsStore;\n\nconst StateContext = createContext({} as MainStore);\n\nexport const StateProvider = ({ children }: any) => {\n    const [UIState, UIDisptch] = useReducer(UIReducer, initialUIState);\n    const [AuthState, AuthDispatch] = useReducer(AuthReducer, initialAuthState);\n    const [EventsState, EventsDispatch] = useReducer(EventsReducer, initialEventsState);\n    const [BookingsState, BookingsDispatch] = useReducer(BookingsReducer, initialBookingsState);\n\n    const MainStore: MainStore = {\n        UIState,\n        UIDisptch,\n        AuthState,\n        AuthDispatch,\n        EventsState,\n        EventsDispatch,\n        BookingsState,\n        BookingsDispatch,\n    };\n\n    return <StateContext.Provider value={MainStore}>{children}</StateContext.Provider>;\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","import { createMuiTheme } from '@material-ui/core';\n\ninterface AppClasses {\n    primaryButton: React.CSSProperties;\n    modalCentered: React.CSSProperties;\n    card: React.CSSProperties;\n}\n\nexport const appClasses: AppClasses = {\n    primaryButton: {\n        margin: '0.25rem 0.1rem',\n    },\n    modalCentered: {\n        top: '50%',\n        left: '50%',\n        transform: `translate(-50%, -50%)`,\n    },\n    card: {\n        width: '30rem',\n        margin: '0.5rem auto',\n        maxWidth: '95%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n};\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#800080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n","interface EnvironmentVariables {\n    BACKEND_URL: string;\n}\n\ninterface ConfigVars {\n    [key: string]: EnvironmentVariables;\n}\n\nconst configVars: ConfigVars = {\n    production: {\n        BACKEND_URL: 'https://easy-event-0.herokuapp.com',\n    },\n    development: {\n        BACKEND_URL: 'http://localhost:3000',\n    },\n};\n\nconst getConfig = (environment: any): EnvironmentVariables => {\n    return configVars[environment];\n};\n\ninterface Config extends EnvironmentVariables {\n    getGraphqlUrl: () => string;\n}\n\nconst config: Config = {\n    ...getConfig(process.env.REACT_APP_STAGE),\n\n    // Add common config values here\n    getGraphqlUrl: function() {\n        return this.BACKEND_URL + '/graphql';\n    },\n};\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, Button, Snackbar, IconButton } from '@material-ui/core';\nimport { IStyles } from '../../shared/models/styles.model';\nimport { Close } from '@material-ui/icons';\n\nconst style = (theme: Theme): IStyles => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\ntype Props = {\n    message: string;\n    duration?: number; // in seconds\n    centered?: boolean;\n};\n\ntype PropsWithStyles = Props & WithStyles<'close'>;\n\nconst AppSnackbar: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const [snackbarOpen, setSnackbarOpen] = useState(true);\n    const { message, duration, centered } = props;\n\n    function handleClose() {\n        setSnackbarOpen(false);\n    }\n\n    useEffect(() => {\n        if (duration !== null && duration !== undefined) {\n            setTimeout(() => {\n                setSnackbarOpen(false);\n            }, duration);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: centered ? 'center' : 'left',\n                }}\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{message}</span>}\n                action={[\n                    <Button\n                        color=\"secondary\"\n                        aria-label=\"Close\"\n                        onClick={handleClose}\n                        className={classes.close}\n                        key=\"close\"\n                    >\n                        DISMISS\n                    </Button>,\n                ]}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(style as any)(AppSnackbar);\n","import React, { useRef, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from 'axios';\n\nimport './auth.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { appClasses } from '../../shared/styles/styles';\nimport config from '../../config';\nimport AppSnackbar from '../sharedComponents/AppSnackbar';\n\ntype SnackbarState =\n    | 'PRISTINE'\n    | 'ATTEMPT_WITH_EMPTY_fORM'\n    | 'ERROR'\n    | 'LOGIN_WRONG_CREDENTIALS'\n    | 'SIGNUP_USER_EXISTS'\n    | 'SIGNUP_SUCCESS';\n\nconst AuthPage = () => {\n    let _isActive: boolean = true;\n\n    const { AuthDispatch } = useStateValue();\n\n    const [isLoginForm, setIsLogInForm] = useState(true);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n    const [progress, setProgress] = useState(0);\n\n    const inputEmail = useRef({} as HTMLInputElement);\n    const inputPassword = useRef({} as HTMLInputElement);\n\n    const submitHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (_isActive) {\n            await setSnackbarState('PRISTINE'); //important as snackbar appear only when state changes\n        }\n\n        const email = inputEmail.current.value.trim();\n        const password = inputPassword.current.value.trim();\n        if (!email || !password) {\n            if (_isActive) {\n                await setSnackbarState('ATTEMPT_WITH_EMPTY_fORM');\n            }\n            return;\n        }\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const signUpData = {\n            query: `\n            mutation {\n                createUser(userInput: {email:\"${email}\", password:\"${password}\"}) {\n                  _id\n                  email\n                }\n              }\n            `,\n        };\n        const loginData = {\n            query: `\n            query {\n                login(email:\"${email}\", password:\"${password}\") {\n                  userId\n                  token\n                  tokenExpiration\n                }\n              }\n            `,\n        };\n        axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: isLoginForm ? loginData : signUpData,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    if (_isActive) {\n                        return setSnackbarState('ERROR');\n                    }\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                setProgress(100);\n                switch (isLoginForm) {\n                    case true: // is login form\n                        if (!resData.login) {\n                            if (_isActive) {\n                                return setSnackbarState('LOGIN_WRONG_CREDENTIALS');\n                            }\n                        }\n                        if (_isActive) {\n                            const { token, userId, tokenExpiration } = resData.login;\n                            AuthDispatch({ type: 'AUTH_LOG_IN', token, userId, tokenExpiration });\n                            return;\n                        }\n\n                    case false: // is signup form\n                        if (!resData.createUser) {\n                            if (_isActive) {\n                                return setSnackbarState('SIGNUP_USER_EXISTS');\n                            }\n                        }\n                        if (_isActive) {\n                            return setSnackbarState('SIGNUP_SUCCESS');\n                        }\n                }\n            })\n            .catch(err => {\n                if (_isActive) {\n                    return setSnackbarState('ERROR');\n                }\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    };\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'LOGIN_WRONG_CREDENTIALS':\n                return <AppSnackbar message=\"Wrong credentials\" centered />;\n            case 'SIGNUP_USER_EXISTS':\n                return <AppSnackbar message=\"User already exists\" centered />;\n            case 'SIGNUP_SUCCESS':\n                return <AppSnackbar message=\"User Creation have been successful!\" centered />;\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" centered />;\n            case 'ATTEMPT_WITH_EMPTY_fORM':\n                return <AppSnackbar message=\"Please provide both Email and Password\" centered />;\n            default:\n                return <div />;\n        }\n    };\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n\n            <form className=\"auth-page\" onSubmit={submitHandler}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input type=\"email\" id=\"email\" ref={inputEmail} />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" ref={inputPassword} />\n                </div>\n                <Button\n                    disabled={0 < progress && progress < 100}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    style={appClasses.primaryButton}\n                >\n                    {isLoginForm ? 'Login' : 'Signup'}\n                </Button>\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    type=\"button\"\n                    style={appClasses.primaryButton}\n                    onClick={_ => setIsLogInForm(!isLoginForm)}\n                >\n                    Switch to {isLoginForm ? 'Signup' : 'Login'}\n                </Button>\n            </form>\n\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport { IStyles } from '../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        maxWidth: '80%',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        outline: 'none',\n    },\n});\n\ntype Props = {\n    children: JSX.Element;\n};\n\ntype PropsWithStyles = Props & WithStyles<'paper'>;\n\nconst AppModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    return (\n        <div className={classes.paper} style={appClasses.modalCentered}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default withStyles(style as any)(AppModalContent);\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Theme, withStyles, WithStyles, Typography, Divider, Button, FormGroup, TextField } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport AppModalContent from '../sharedComponents/AppModalContent';\nimport { Alarm } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, InlineDatePicker, InlineTimePicker } from 'material-ui-pickers';\nimport DateFNSUtils from '@date-io/date-fns';\nimport { setHours, getHours, setDayOfYear, getDayOfYear, setMinutes, getMinutes } from 'date-fns';\nimport classNames from 'classnames';\n\nimport './eventModalContent.scss';\nimport Axios from 'axios';\nimport { useStateValue } from '../../Store/Store';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\nimport { IEvent } from '../../shared/models/event.model';\n\nconst style = (theme: Theme): IStyles => ({\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        padding: '0.3rem 1.5rem',\n    },\n    content: {\n        margin: '1.5rem',\n    },\n    actions: {},\n});\n\ntype Props = {\n    closeModal: any;\n    eventToModify?: IEvent;\n};\n\ntype PropsWithStyles = Props & WithStyles<'header' | 'content' | 'actions'>;\n\nconst EventModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState, EventsDispatch } = useStateValue();\n    const [selectedDayOfTeYear, handleDayOfTheYearChange] = useState(new Date());\n    const [selectedTime, handleTimeChange] = useState(new Date());\n\n    const eventToModify = props.eventToModify || ({} as IEvent);\n    const [inputTitleValue, setInputTitleValue] = useState(eventToModify.title);\n    const [inputDescriptionValue, setInputDescriptionValue] = useState(eventToModify.description);\n    const [inputPriceValue, setInputPriceValue] = useState(eventToModify.price);\n\n    function onChangeFunction(\n        seter: React.Dispatch<React.SetStateAction<any>>,\n        event: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n    ) {\n        seter(event.currentTarget.value);\n    }\n\n    function mapDateToSelectedDayAndSelectedTime(dateToMap: Date) {\n        handleDayOfTheYearChange(dateToMap);\n        handleTimeChange(dateToMap);\n    }\n\n    useEffect(() => {\n        eventToModify.date && mapDateToSelectedDayAndSelectedTime(new Date(eventToModify.date));\n    }, []);\n\n    function constructDate(selectedDayOfTeYear: Date, selectedTime: Date) {\n        if (!selectedDayOfTeYear || !selectedTime) {\n            throw new Error('Date and time must be selected');\n        }\n        let modifiedDate = new Date();\n        modifiedDate = setDayOfYear(modifiedDate, getDayOfYear(selectedDayOfTeYear));\n        modifiedDate = setHours(modifiedDate, getHours(selectedTime));\n        modifiedDate = setMinutes(modifiedDate, getMinutes(selectedTime));\n        return modifiedDate.toISOString();\n    }\n\n    function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const title = inputTitleValue && inputTitleValue.trim();\n        const description = inputDescriptionValue && inputDescriptionValue.trim();\n        const price = inputPriceValue && inputPriceValue.toString();\n        const date = constructDate(selectedDayOfTeYear, selectedTime);\n        console.log(typeof price);\n        if (!title || !description || !price || !date) {\n            alert('All input must be selected');\n            return;\n        }\n\n        const EVENT_PENDING = eventToModify ? 'MODIFY_EVENT_PENDING' : 'CREATE_EVENT_PENDING';\n        EventsDispatch({ type: EVENT_PENDING });\n\n        const requestBody = eventToModify._id\n            ? {\n                  query: `mutation {\n                        modifyEvent(modifyEventInput: {_id: \"${\n                            eventToModify._id\n                        }\", title: \"${title}\", description: \"${description}\",\n                        price: ${price}, date: \"${date}\"}) {\n                            _id\n                            title\n                            description\n                            date\n                            price\n                            creator{\n                                _id\n                                email\n                            }\n                        }\n                }`,\n              }\n            : {\n                  query: `mutation {\n                createEvent(eventInput: {title: \"${title}\", description: \"${description}\",\n                price: ${price}, date: \"${date}\"}) {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                    creator{\n                        _id\n                        email\n                    }\n                }\n            }`,\n              };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    const EVENT_REJECTED = eventToModify ? 'MODIFY_EVENT_REJECTED' : 'CREATE_EVENT_REJECTED';\n                    EventsDispatch({ type: EVENT_REJECTED });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                const EVENT_FULFILLED = eventToModify ? 'MODIFY_EVENT_FULFILLED' : 'CREATE_EVENT_FULFILLED';\n                // EventsDispatch({ type: EVENT_FULFILLED, event: resData.createEvent || resData.modifyEvent });\n                EventsDispatch({ type: EVENT_FULFILLED, event: resData.modifyEvent });\n                console.log(resData.modifyEvent);\n                props.closeModal();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <AppModalContent>\n            <React.Fragment>\n                <Typography className={classes.header} variant=\"h6\">\n                    Create Event\n                </Typography>\n\n                <form className={classNames(classes.content, 'event-modal-content__form')} onSubmit={submitHandler}>\n                    <FormGroup className=\"event-modal-content__title\">\n                        <TextField\n                            id=\"title\"\n                            variant=\"outlined\"\n                            label=\"Title\"\n                            value={inputTitleValue}\n                            onChange={event => onChangeFunction(setInputTitleValue, event)}\n                        />\n                    </FormGroup>\n\n                    <FormGroup className=\"event-modal-content__description\">\n                        <TextField\n                            id=\"description\"\n                            variant=\"outlined\"\n                            label=\"description\"\n                            value={inputDescriptionValue}\n                            onChange={event => onChangeFunction(setInputDescriptionValue, event)}\n                        />\n                    </FormGroup>\n\n                    <FormGroup className=\"event-modal-content__date\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineDatePicker\n                                keyboard\n                                clearable\n                                variant=\"outlined\"\n                                label=\"Date\"\n                                onChange={handleDayOfTheYearChange}\n                                value={selectedDayOfTeYear}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"event-modal-content__time\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineTimePicker\n                                keyboard\n                                variant=\"outlined\"\n                                keyboardIcon={<Alarm />}\n                                label=\"Time\"\n                                onChange={handleTimeChange}\n                                value={selectedTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"event-modal-content__price\">\n                        <TextField\n                            id=\"price\"\n                            variant=\"outlined\"\n                            label=\"price\"\n                            value={inputPriceValue}\n                            onChange={event => onChangeFunction(setInputPriceValue, event)}\n                        />\n                    </FormGroup>\n\n                    <Divider className=\"event-modal-content__actions-divider\" />\n                    <div className={classNames(classes.actions, 'event-modal-content__actions')}>\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={props.closeModal}\n                            style={appClasses.primaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                            {eventToModify._id ? 'Update' : 'Create'}\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        </AppModalContent>\n    );\n};\n\nexport default withStyles(style as any)(EventModalContent);\n","import React, { useState, useEffect } from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n    Modal,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport Axios from 'axios';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport config from '../../../config';\nimport AppSnackbar from '../../sharedComponents/AppSnackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport EventModalContent from '../EventModalContent';\nimport { IEvent } from '../../../shared/models/event.model';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'USER_NOT_LOGGED_IN' | 'ERROR' | 'BOKING_SUCCESSFUL';\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst EventItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const [progress, setProgress] = useState(0);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n    const [isModalOpen, setModalOpen] = useState(false);\n    function closeModal() {\n        setModalOpen(false);\n    }\n\n    async function detailsHandler() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n        if (_isActive) {\n            await setSnackbarState('NOT_IMPLEMENTED_YET');\n        }\n    }\n\n    async function bookEventHandler() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n\n        if (!userLoggedIn) {\n            if (_isActive) {\n                await setSnackbarState('USER_NOT_LOGGED_IN');\n            }\n            return;\n        }\n\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `mutation {\n                bookEvent(eventId: \"${event._id}\") {\n                  _id\n                  createdAt\n                  updatedAt\n                }\n              }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                if (resData.bookEvent) {\n                    if (_isActive) {\n                        setProgress(100);\n                    }\n                    if (_isActive) {\n                        return setSnackbarState('BOKING_SUCCESSFUL');\n                    }\n                }\n            })\n            .catch(err => {\n                if (_isActive) {\n                    return setSnackbarState('ERROR');\n                }\n            })\n            .finally(() => {\n                if (_isActive) {\n                    setProgress(0);\n                }\n            });\n    }\n    const { AuthState } = useStateValue();\n    const { event } = props;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === event.creator._id;\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" />;\n            case 'USER_NOT_LOGGED_IN':\n                return <AppSnackbar message=\"You must log in to book this event\" />;\n            case 'BOKING_SUCCESSFUL':\n                return <AppSnackbar message=\"Event booked successfully\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <LinearProgress\n                variant=\"determinate\"\n                value={progress}\n                style={{ opacity: progress ? 1 : 0 }}\n                className={classes.card}\n            />\n\n            <Card className={classes.card}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    title={event.title}\n                    action={\n                        isThisUser && (\n                            <IconButton aria-label=\"Edit\" onClick={_ => setModalOpen(true)}>\n                                <Create fontSize=\"small\" />\n                            </IconButton>\n                        )\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {event.description}\n                        </Typography>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {new Date(event.date).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"h6\">{event.price} USD </Typography>\n                    </span>\n                    {isThisUser && (\n                        <span className={classes.cardContentItem}>\n                            <Typography variant=\"caption\">You are the owner of this event</Typography>\n                        </span>\n                    )}\n                </CardContent>\n                <CardActions className={classes.cardActions}>\n                    <Button variant=\"text\" onClick={detailsHandler}>\n                        Details\n                    </Button>\n                    {!isThisUser && (\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={bookEventHandler}\n                            disabled={0 < progress && progress < 100}\n                        >\n                            Book this\n                        </Button>\n                    )}\n                </CardActions>\n            </Card>\n            <Modal open={isModalOpen} onClose={_ => setModalOpen(false)}>\n                <EventModalContent closeModal={closeModal} eventToModify={isThisUser ? event : ({} as IEvent)} />\n            </Modal>\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {\n    event: IEvent;\n    classes: any;\n};\n\nexport default withStyles(style as any)(EventItem);\n","import React from 'react';\nimport EventItem from './EventItem';\nimport { withStyles, WithStyles, Theme, Card, CardHeader } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { appClasses } from '../../../shared/styles/styles';\n\nconst style = (theme: Theme): IStyles => ({\n    card: {\n        padding: '3rem 0',\n        ...appClasses.card,\n    },\n    cardHeader: {\n        textAlign: 'center',\n        width: '90%',\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card' | 'cardHeader'>;\n\nconst EventsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { EventsState } = useStateValue();\n    const EventsList =\n        EventsState.events.length > 0 ? (\n            EventsState.events.map((event: any) => <EventItem event={event} key={event._id} />)\n        ) : (\n            <Card className={classes.card}>\n                <CardHeader className={classes.cardHeader} title=\"There are no events yet\" />\n            </Card>\n        );\n\n    return <section>{EventsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport '../../index.scss';\nimport EventModalContent from './EventModalContent';\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport EventsList from './EventsList/EventsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    fab: {\n        position: 'fixed',\n        right: '5%',\n        bottom: '2rem',\n        margin: theme.spacing.unit,\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card' | 'fab'>;\n\nconst EventsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { EventsDispatch } = useStateValue();\n    const [progress, setProgress] = useState(0);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n        const requestBody = {\n            query: `query {\n                events {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                    creator{\n                        _id\n                        email\n                    }\n                }\n            }`,\n        };\n\n        EventsDispatch({ type: 'FETCH_EVENTS_PENDING' });\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                EventsDispatch({ type: 'FETCH_EVENTS_FULFILLED', events: resData.events });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const { AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [isModalOpen, setModalOpen] = useState(false);\n    function closeModal() {\n        setModalOpen(false);\n    }\n\n    return (\n        <div className=\"events-page app-centered-page\">\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n            {userLoggedIn && (\n                <React.Fragment>\n                    <Fab className={classes.fab} color=\"primary\" type=\"button\" onClick={_ => setModalOpen(true)}>\n                        <AddIcon />\n                    </Fab>\n                    <Modal open={isModalOpen} onClose={_ => setModalOpen(false)}>\n                        <EventModalContent closeModal={closeModal} />\n                    </Modal>\n                </React.Fragment>\n            )}\n            <EventsList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsPage);\n","import React, { useEffect, useState } from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    LinearProgress,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create, Delete } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { IBooking } from '../../../shared/models/booking.model';\nimport Axios from 'axios';\nimport config from '../../../config';\nimport AppSnackbar from '../../sharedComponents/AppSnackbar';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'ERROR' | 'CANCEL_BOOKING_SUCCESSFUL';\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst BookingItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const [progress, setProgress] = useState(0);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n\n    const { AuthState, BookingsDispatch } = useStateValue();\n    const { booking } = props;\n    const { event } = booking;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === booking.event.creator._id;\n    async function deleteBookingHandler() {\n        if (!userLoggedIn) {\n            // shouldn't occur\n            alert('you should log in to cancel an event');\n            return;\n        }\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n        if (_isActive) {\n            setProgress(10);\n        }\n        const requestBody = {\n            query: `mutation {\n                cancelBooking(bookingId: \"${booking._id}\") {\n                  _id\n                  title\n                }\n              }`,\n        };\n        BookingsDispatch({ type: 'CANCEL_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_FULFILLED', bookingId: booking._id });\n                if (_isActive) {\n                    setProgress(100);\n                }\n                if (_isActive) {\n                    return setSnackbarState('CANCEL_BOOKING_SUCCESSFUL');\n                }\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_REJECTED' });\n\n                if (_isActive) {\n                    return setSnackbarState('ERROR');\n                }\n            })\n            .finally(() => {\n                if (_isActive) {\n                    setProgress(0);\n                }\n            });\n    }\n\n    async function handleDetailsClick() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n        if (_isActive) {\n            await setSnackbarState('NOT_IMPLEMENTED_YET');\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" />;\n            case 'CANCEL_BOOKING_SUCCESSFUL':\n                return <AppSnackbar message=\"Event have been cancelled successfully\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <LinearProgress\n                variant=\"determinate\"\n                value={progress}\n                style={{ opacity: progress ? 1 : 0 }}\n                className={classes.card}\n            />\n            <Card className={classes.card}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    title={event.title}\n                    action={\n                        <React.Fragment>\n                            {isThisUser && (\n                                <IconButton aria-label=\"Edit\">\n                                    <Create fontSize=\"small\" />\n                                </IconButton>\n                            )}\n                            <IconButton aria-label=\"Delete\" onClick={deleteBookingHandler}>\n                                <Delete fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {event.description}\n                        </Typography>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {new Date(event.date).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"h6\">{event.price} USD </Typography>\n                    </span>\n                    {isThisUser && (\n                        <span className={classes.cardContentItem}>\n                            <Typography variant=\"caption\">You are the owner of this event</Typography>\n                        </span>\n                    )}\n                </CardContent>\n                <CardActions className={classes.cardActions}>\n                    <Button onClick={handleDetailsClick} variant=\"text\">\n                        Details\n                    </Button>\n                </CardActions>\n            </Card>\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {\n    booking: IBooking;\n    classes: any;\n};\n\nexport default withStyles(style as any)(BookingItem);\n","import React from 'react';\nimport BookingItem from './BookingItem';\nimport { withStyles, WithStyles, Theme, Card, CardHeader } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { appClasses } from '../../../shared/styles/styles';\n\nconst style = (theme: Theme): IStyles => ({\n    card: {\n        padding: '3rem 0',\n        ...appClasses.card,\n    },\n    cardHeader: {\n        textAlign: 'center',\n        width: '90%',\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card' | 'cardHeader'>;\n\nconst BookingsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { BookingsState } = useStateValue();\n    const BookingsList = BookingsState.bookings.length ? (\n        BookingsState.bookings.map((booking: any) => <BookingItem booking={booking} key={booking._id} />)\n    ) : (\n        <Card className={classes.card}>\n            <CardHeader className={classes.cardHeader} title=\"You haven't booked any event yet\" />\n        </Card>\n    );\n\n    return <section>{BookingsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsList);\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport BookingList from './BookingsList/BookingsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'list' | 'card'>;\n\nconst BookingsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { BookingsDispatch, AuthState } = useStateValue();\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `query {\n                bookings {\n                    _id\n                    createdAt\n                    event {\n                        _id\n                        title\n                        date\n                        price\n                        creator {\n                            _id\n                        }\n                    }\n                }\n            }`,\n        };\n        BookingsDispatch({ type: 'FETCH_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_FULFILLED', bookings: resData.bookings });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <div className=\"bookins-page .app-centered-page\">\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n            <BookingList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsPage);\n","import React from 'react';\n\nimport './drawerToggleButton.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst DrawerToggleButton = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return (\n        <button className=\"drawer-toggle-button\" onClick={clickHandler}>\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n        </button>\n    );\n};\n\nexport default DrawerToggleButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useStateValue } from '../../Store/Store';\n\nconst NavigationItems = () => {\n    const { AuthState } = useStateValue();\n    return (\n        <nav>\n            <ul>\n                {!AuthState.token && (\n                    <li>\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </li>\n                )}\n                <li>\n                    <NavLink to=\"/events\">Events</NavLink>\n                </li>\n                {AuthState.token && (\n                    <li>\n                        <NavLink to=\"/bookings\">Bookings</NavLink>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavigationItems;\n","import React, { useState } from 'react';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport NavigationItems from './NavigationItems';\nimport MuIconButton from '@material-ui/core/IconButton';\nimport MuAccountCircle from '@material-ui/icons/AccountCircle';\nimport MuMenu from '@material-ui/core/Menu';\nimport MuMenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './mainNavigation.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { Toolbar, Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { IStyles } from '../../shared/models/styles.model';\nimport AppSnackbar from '../sharedComponents/AppSnackbar';\n\nconst styles = (theme: Theme): IStyles => ({\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'LOGOUT_SUCCESSFUL' | 'ERROR';\n\ntype PropsWithStyles = Props & WithStyles<'root' | 'grow' | 'menuButton'>;\n\nconst MainNavigation: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { AuthState, AuthDispatch } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [anchorEl, setAnchorEl] = useState();\n    const isMenuOpen = Boolean(anchorEl);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n\n    function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    async function handleLogout() {\n        await setSnackbarState('PRISTINE');\n        await AuthDispatch({ type: 'AUTH_LOG_OUT' });\n        closeMenu();\n        await setSnackbarState('LOGOUT_SUCCESSFUL');\n    }\n\n    async function handleProfileClick() {\n        await setSnackbarState('PRISTINE');\n        closeMenu();\n        await setSnackbarState('NOT_IMPLEMENTED_YET');\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    const renderMenu = (\n        <MuMenu anchorEl={anchorEl} open={isMenuOpen} onClose={closeMenu}>\n            <MuMenuItem onClick={handleProfileClick}>Profile</MuMenuItem>\n            <MuMenuItem onClick={handleLogout}>Logout</MuMenuItem>\n        </MuMenu>\n    );\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" duration={3000} />;\n            case 'LOGOUT_SUCCESSFUL':\n                return <AppSnackbar message=\"You have logout successfully\" duration={3000} />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <AppBar className=\"main-navigation\">\n                <Toolbar className=\"main-navigation__toolbar\">\n                    <span className=\"main-navigation__logo\">\n                        <span className=\"main-navigation__button\">\n                            <DrawerToggleButton />\n                        </span>\n                        <h1>EasyEvent</h1>\n                    </span>\n                    <span className=\"main-navigation__items\">\n                        <span className=\"main-navigation__links\">\n                            <NavigationItems />\n                        </span>\n                        {userLoggedIn && (\n                            <MuIconButton onClick={handleProfileMenuOpen}>\n                                <MuAccountCircle className=\"account-circle\" />\n                            </MuIconButton>\n                        )}\n                    </span>\n                    {renderMenu}\n                </Toolbar>\n            </AppBar>\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(styles as any)(MainNavigation);\n","import React from 'react';\nimport NavigationItems from './NavigationItems';\n\nimport './sideDrawer.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst SideDrawer = () => {\n    const { UIState } = useStateValue();\n\n    let sideDrawerClasses = ['side-drawer'];\n    if (UIState.isSideDrawOpen) {\n        sideDrawerClasses.push('side-drawer__open');\n    }\n    return (\n        <span className={sideDrawerClasses.join(' ')}>\n            <NavigationItems />\n        </span>\n    );\n};\n\nexport default SideDrawer;\n","import React from 'react';\n\nimport './backdrop.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst Backdrop = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return <div className=\"backdrop\" onClick={clickHandler} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './components/Auth/Auth';\nimport EventsPage from './components/Events/Events';\nimport BookingsPage from './components/Bookings/Bookings';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport './app.scss';\nimport SideDrawer from './components/Navigation/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport { useStateValue } from './Store/Store';\n\nfunction App() {\n    const { UIState, AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    let backdrop;\n    if (UIState.isSideDrawOpen) {\n        backdrop = <Backdrop />;\n    }\n    return (\n        <div className=\"main-content\">\n            <BrowserRouter>\n                <MainNavigation />\n                <SideDrawer />\n                {backdrop}\n                <main>\n                    <Switch>\n                        {userLoggedIn && <Redirect from=\"/\" to=\"/events\" exact />}\n                        {userLoggedIn && <Redirect from=\"/auth\" to=\"/events\" exact />}\n\n                        {!userLoggedIn && <Route path=\"/auth\" component={AuthPage} />}\n                        {userLoggedIn && <Route path=\"/bookings\" component={BookingsPage} />}\n                        <Route path=\"/events\" component={EventsPage} />\n\n                        {!userLoggedIn && <Redirect to=\"/auth\" />}\n                    </Switch>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './Store/Store';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { theme } from './shared/styles/styles';\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <StateProvider>\n            <App />\n        </StateProvider>\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}