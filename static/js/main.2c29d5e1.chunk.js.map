{"version":3,"sources":["Store/Reducers/ui.reducer.tsx","Store/Reducers/auth.reducer.tsx","Store/Reducers/events.reducer.tsx","Store/Reducers/bookings.reducer.tsx","Store/Store.tsx","shared/styles/styles.tsx","config.ts","components/Auth/Auth.tsx","components/sharedComponents/AppModalContent.tsx","components/Events/CreateEventModalContent.tsx","components/Events/EventsList/EventItem.tsx","components/Events/EventsList/EventsList.tsx","components/Events/Events.tsx","components/Bookings/BookingsList/BookingItem.tsx","components/Bookings/BookingsList/BookingsList.tsx","components/Bookings/Bookings.tsx","components/Navigation/DrawerToggleButton.tsx","components/Navigation/NavigationItems.tsx","components/Navigation/MainNavigation.tsx","components/Navigation/SideDrawer.tsx","components/Backdrop/Backdrop.tsx","App.tsx","index.tsx"],"names":["initialUIState","isSideDrawOpen","UIReducer","state","action","type","initialAuthState","token","userId","tokenExpiration","AuthReducer","initialEventsState","events","status","EventsReducer","Object","toConsumableArray","initialBookingsState","bookings","BookingsReducer","filter","booking","bookingId","_id","StateContext","createContext","useStateValue","useContext","appClasses","primaryButton","margin","modalCentered","top","left","transform","card","width","maxWidth","display","flexDirection","alignItems","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","configVars","production","BACKEND_URL","development","config","objectSpread","process","getGraphqlUrl","this","AuthPage","AuthDispatch","_useState","useState","_useState2","slicedToArray","isLoginForm","setIsLogInForm","inputEmail","useRef","inputPassword","react_default","a","createElement","className","onSubmit","event","preventDefault","email","current","value","trim","password","signUpData","query","concat","loginData","axios","url","method","data","headers","Content-Type","then","res","Error","resData","login","_resData$login","catch","err","console","log","htmlFor","id","ref","Button_default","variant","color","style","onClick","_","withStyles","paper","position","spacing","unit","backgroundColor","background","boxShadow","shadows","outline","_ref","classes","props","objectWithoutProperties","children","header","padding","content","actions","AuthState","Date","selectedDayOfTeYear","HandleDayOfTheYearChange","_useState3","_useState4","selectedTime","handleTimeChange","inputTitle","inputDescription","inputPrice","sharedComponents_AppModalContent","Fragment","index_es","classNames","title","description","price","date","modifiedDate","setDayOfYear","getDayOfYear","setHours","getHours","setMinutes","getMinutes","toISOString","constructModifiedDate","requestBody","parseFloat","Axios","Authorization","fetchEvents","closeModal","label","inputRef","material_ui_pickers_esm","utils","DateFNSUtils","keyboard","clearable","onChange","keyboardIcon","icons_index_es","cardContent","justifyContent","flexWrap","cardContentItem","flex","cardHeader","cardDescription","marginRight","cardActions","userLoggedIn","Boolean","isThisUser","creator","aria-label","fontSize","gutterBottom","toLocaleString","alert","EventsList","EventsState","map","EventsList_EventItem","key","_isActive","EventsDispatch","progress","setProgress","finally","setTimeout","useEffect","isModalOpen","setModalOpen","open","onClose","Events_CreateEventModalContent","Events_EventsList_EventsList","_useStateValue","BookingsDispatch","BookingsList","BookingsState","BookingsList_BookingItem","Bookings_BookingsList_BookingsList","DrawerToggleButton","UIDisptch","NavigationItems","react_router_dom","to","MainNavigation","anchorEl","setAnchorEl","isMenuOpen","closeMenu","renderMenu","Menu_default","MenuItem_default","Navigation_DrawerToggleButton","Navigation_NavigationItems","IconButton_default","currentTarget","AccountCircle_default","SideDrawer","sideDrawerClasses","UIState","push","join","Backdrop","App","backdrop","components_Backdrop_Backdrop","Navigation_MainNavigation","Navigation_SideDrawer","react_router","from","exact","path","component","BookingsPage","EventsPage","ReactDOM","render","styles","_useReducer","useReducer","_useReducer2","_useReducer3","_useReducer4","_useReducer5","_useReducer6","_useReducer7","_useReducer8","MainStore","Provider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c29d5e1.chunk.js","sourcesContent":["import { Dispatch } from 'react';\n\nexport interface UIStore {\n    UIState: UIState;\n    UIDisptch: Dispatch<UIActions>;\n}\n\nexport interface UIState {\n    isSideDrawOpen: boolean;\n}\n\nexport const initialUIState = { isSideDrawOpen: false };\n\nexport const UIReducer = (state: UIState, action: UIActions) => {\n    switch (action.type) {\n        case 'UI_TOGGLE_SIDE_NAV':\n            return { isSideDrawOpen: !state.isSideDrawOpen };\n        default:\n            return state || initialUIState;\n    }\n};\n\n//Actions\ninterface UIToggleSideNav {\n    type: 'UI_TOGGLE_SIDE_NAV';\n}\n\ntype UIActions = UIToggleSideNav;\n","import { Dispatch } from 'react';\n\nexport interface AuthStore {\n    AuthState: AuthState;\n    AuthDispatch: Dispatch<AuthActions>;\n}\n\nexport interface AuthState {\n    userId: string | null;\n    token: string | null;\n    tokenExpiration: number | null;\n}\n\nexport const initialAuthState: AuthState = { token: null, userId: null, tokenExpiration: null };\n\nexport const AuthReducer = (state: AuthState, action: AuthActions): AuthState => {\n    switch (action.type) {\n        case 'AUTH_LOG_IN':\n            const { token, userId, tokenExpiration } = action;\n            return { token, userId, tokenExpiration };\n        case 'AUTH_LOG_OUT':\n            return initialAuthState;\n        default:\n            return state || initialAuthState;\n    }\n};\n\n// Actions\ninterface AuthLogIn {\n    type: 'AUTH_LOG_IN';\n    userId: AuthState['userId'];\n    token: AuthState['token'];\n    tokenExpiration: AuthState['tokenExpiration'];\n}\n\ninterface AuthLogOut {\n    type: 'AUTH_LOG_OUT';\n}\n\ntype AuthActions = AuthLogIn | AuthLogOut;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\n\nexport interface EventsStore {\n    EventsState: EventsState;\n    EventsDispatch: Dispatch<EventsActions>;\n}\n\nexport interface Event {\n    _id: string;\n    title: string;\n    description: string;\n    price: number;\n    date: string;\n    creator: Array<any>;\n}\n\nexport interface EventsState {\n    status: Status;\n    events: Array<Event>;\n}\n\nexport const initialEventsState: EventsState = { events: [], status: 'PRISTINE' };\n\nexport const EventsReducer = (state: EventsState, action: EventsActions): EventsState => {\n    switch (action.type) {\n        case 'FETCH_EVENTS_PENDING':\n            return { events: [...state.events], status: 'PENDING' };\n        case 'FETCH_EVENTS_FULFILLED':\n            return { events: [...action.events], status: 'FULFILLED' };\n        case 'FETCH_EVENTS_REJECTED':\n            return { events: [...state.events], status: 'REJECTED' };\n        default:\n            return state || initialEventsState;\n    }\n};\n\n// Actions\ninterface FetchEventsPending {\n    type: 'FETCH_EVENTS_PENDING';\n}\n\ninterface FetchEventsRejected {\n    type: 'FETCH_EVENTS_REJECTED';\n}\ninterface FetchEventsFulfilled {\n    type: 'FETCH_EVENTS_FULFILLED';\n    events: EventsState['events'];\n}\n\ntype EventsActions = FetchEventsPending | FetchEventsRejected | FetchEventsFulfilled;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\nimport { IBooking } from '../../shared/models/booking.model';\n\nexport interface BookingsStore {\n    BookingsState: BookingsState;\n    BookingsDispatch: Dispatch<BookingsActions>;\n}\n\nexport interface BookingsState {\n    status: Status;\n    bookings: Array<IBooking>;\n}\n\nexport const initialBookingsState: BookingsState = { bookings: [], status: 'PRISTINE' };\n\nexport const BookingsReducer = (state: BookingsState, action: BookingsActions): BookingsState => {\n    switch (action.type) {\n        case 'FETCH_BOOKINGS_PENDING':\n        case 'CANCEL_BOOKINGS_PENDING':\n            return { bookings: [...state.bookings], status: 'PENDING' };\n        case 'FETCH_BOOKINGS_FULFILLED':\n            return { bookings: [...action.bookings], status: 'FULFILLED' };\n        case 'CANCEL_BOOKINGS_FULFILLED':\n            const updatedBookings = state.bookings.filter(booking => action.bookingId !== booking._id);\n            return { bookings: updatedBookings, status: 'FULFILLED' };\n        case 'FETCH_BOOKINGS_REJECTED':\n        case 'CANCEL_BOOKINGS_REJECTED':\n            return { bookings: [...state.bookings], status: 'REJECTED' };\n        default:\n            return state || initialBookingsState;\n    }\n};\n\n// Actions\ninterface BookingsPending {\n    type: 'FETCH_BOOKINGS_PENDING' | 'CANCEL_BOOKINGS_PENDING';\n}\n\ninterface bookingsRejected {\n    type: 'FETCH_BOOKINGS_REJECTED' | 'CANCEL_BOOKINGS_REJECTED';\n}\ninterface fetchBookingsFulfilled {\n    type: 'FETCH_BOOKINGS_FULFILLED';\n    bookings: BookingsState['bookings'];\n}\ninterface cancelBookingsFulfilled {\n    type: 'CANCEL_BOOKINGS_FULFILLED';\n    bookingId: IBooking['_id'];\n}\n\ntype BookingsActions = BookingsPending | bookingsRejected | fetchBookingsFulfilled | cancelBookingsFulfilled;\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialUIState, UIReducer, UIStore } from './Reducers/ui.reducer';\nimport { initialAuthState, AuthReducer, AuthStore } from './Reducers/auth.reducer';\nimport { EventsStore, initialEventsState, EventsReducer } from './Reducers/events.reducer';\nimport { BookingsStore, initialBookingsState, BookingsReducer } from './Reducers/bookings.reducer';\n\ntype MainStore = UIStore & AuthStore & EventsStore & BookingsStore;\n\nconst StateContext = createContext({} as MainStore);\n\nexport const StateProvider = ({ children }: any) => {\n    const [UIState, UIDisptch] = useReducer(UIReducer, initialUIState);\n    const [AuthState, AuthDispatch] = useReducer(AuthReducer, initialAuthState);\n    const [EventsState, EventsDispatch] = useReducer(EventsReducer, initialEventsState);\n    const [BookingsState, BookingsDispatch] = useReducer(BookingsReducer, initialBookingsState);\n\n    const MainStore: MainStore = {\n        UIState,\n        UIDisptch,\n        AuthState,\n        AuthDispatch,\n        EventsState,\n        EventsDispatch,\n        BookingsState,\n        BookingsDispatch,\n    };\n\n    return <StateContext.Provider value={MainStore}>{children}</StateContext.Provider>;\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","import { createMuiTheme } from '@material-ui/core';\n\ninterface AppClasses {\n    primaryButton: React.CSSProperties;\n    modalCentered: React.CSSProperties;\n    card: React.CSSProperties;\n}\n\nexport const appClasses: AppClasses = {\n    primaryButton: {\n        margin: '0.25rem 0.1rem',\n    },\n    modalCentered: {\n        top: '50%',\n        left: '50%',\n        transform: `translate(-50%, -50%)`,\n    },\n    card: {\n        width: '30rem',\n        margin: '0.5rem auto',\n        maxWidth: '80%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n};\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#800080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n","interface EnvironmentVariables {\n    BACKEND_URL: string;\n}\n\ninterface ConfigVars {\n    [key: string]: EnvironmentVariables;\n}\n\nconst configVars: ConfigVars = {\n    production: {\n        BACKEND_URL: 'https://easy-event-0.herokuapp.com',\n    },\n    development: {\n        BACKEND_URL: 'http://localhost:3000',\n    },\n};\n\nconst getConfig = (environment: any): EnvironmentVariables => {\n    return configVars[environment];\n};\n\ninterface Config extends EnvironmentVariables {\n    getGraphqlUrl: () => string;\n}\n\nconst config: Config = {\n    ...getConfig(process.env.REACT_APP_STAGE),\n\n    // Add common config values here\n    getGraphqlUrl: function() {\n        return this.BACKEND_URL + '/graphql';\n    },\n};\n\nexport default config;\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nimport './auth.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { appClasses } from '../../shared/styles/styles';\nimport config from '../../config';\n\nconst AuthPage = () => {\n    const { AuthDispatch } = useStateValue();\n\n    const [isLoginForm, setIsLogInForm] = useState(true);\n    const inputEmail = useRef({} as HTMLInputElement);\n    const inputPassword = useRef({} as HTMLInputElement);\n    const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const email = inputEmail.current.value.trim();\n        const password = inputPassword.current.value.trim();\n        if (!email || !password) {\n            return;\n        }\n\n        const signUpData = {\n            query: `\n            mutation {\n                createUser(userInput: {email:\"${email}\", password:\"${password}\"}) {\n                  _id\n                  email\n                }\n              }\n            `,\n        };\n        const loginData = {\n            query: `\n            query {\n                login(email:\"${email}\", password:\"${password}\") {\n                  userId\n                  token\n                  tokenExpiration\n                }\n              }\n            `,\n        };\n        axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: isLoginForm ? loginData : signUpData,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                if (resData.login) {\n                    const { token, userId, tokenExpiration } = resData.login;\n                    AuthDispatch({ type: 'AUTH_LOG_IN', token, userId, tokenExpiration });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n    return (\n        <form className=\"auth-page\" onSubmit={submitHandler}>\n            <div className=\"form-control\">\n                <label htmlFor=\"email\">E-mail</label>\n                <input type=\"email\" id=\"email\" ref={inputEmail} />\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" ref={inputPassword} />\n            </div>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                {isLoginForm ? 'Login' : 'Signup'}\n            </Button>\n            <span />\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                style={appClasses.primaryButton}\n                onClick={_ => setIsLogInForm(!isLoginForm)}\n            >\n                Switch to {isLoginForm ? 'Signup' : 'Login'}\n            </Button>\n        </form>\n    );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport { IStyles } from '../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        maxWidth: '80%',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        outline: 'none',\n    },\n});\n\ntype Props = {\n    children: JSX.Element;\n};\n\ntype PropsWithStyles = Props & WithStyles<'paper'>;\n\nconst AppModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    return (\n        <div className={classes.paper} style={appClasses.modalCentered}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default withStyles(style as any)(AppModalContent);\n","import React, { useRef, useState } from 'react';\nimport { Theme, withStyles, WithStyles, Typography, Divider, Button, FormGroup, TextField } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport AppModalContent from '../sharedComponents/AppModalContent';\nimport { Alarm } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, InlineDatePicker, InlineTimePicker } from 'material-ui-pickers';\nimport DateFNSUtils from '@date-io/date-fns';\nimport { setHours, getHours, setDayOfYear, getDayOfYear, setMinutes, getMinutes } from 'date-fns';\nimport classNames from 'classnames';\n\nimport './createEventModalContent.scss';\nimport Axios from 'axios';\nimport { useStateValue } from '../../Store/Store';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        padding: '0.3rem 1.5rem',\n    },\n    content: {\n        margin: '1.5rem',\n    },\n    actions: {},\n});\n\ntype Props = {\n    closeModal: any;\n    fetchEvents: any;\n};\n\ntype PropsWithStyles = Props & WithStyles<'header' | 'content' | 'actions'>;\n\nconst CreateEventModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState } = useStateValue();\n    const [selectedDayOfTeYear, HandleDayOfTheYearChange] = useState(new Date());\n    const [selectedTime, handleTimeChange] = useState(new Date());\n\n    const inputTitle = useRef({} as HTMLInputElement);\n    const inputDescription = useRef({} as HTMLInputElement);\n    const inputPrice = useRef({} as HTMLInputElement);\n\n    function constructModifiedDate(selectedDayOfTeYear: Date, selectedTime: Date) {\n        if (!selectedDayOfTeYear || !selectedTime) {\n            throw new Error('Date and time must be selected');\n        }\n        let modifiedDate = new Date();\n        modifiedDate = setDayOfYear(modifiedDate, getDayOfYear(selectedDayOfTeYear));\n        modifiedDate = setHours(modifiedDate, getHours(selectedTime));\n        modifiedDate = setMinutes(modifiedDate, getMinutes(selectedTime));\n        return modifiedDate.toISOString();\n    }\n\n    function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const title = inputTitle.current.value.trim();\n        const description = inputDescription.current.value.trim();\n        const price = inputPrice.current.value.trim();\n        const date = constructModifiedDate(selectedDayOfTeYear, selectedTime);\n\n        if (!title || !description || !price || !date) {\n            throw new Error('All input must be selected');\n        }\n\n        const requestBody = {\n            query: `mutation {\n                createEvent(eventInput: {title: \"${title}\", description: \"${description}\",\n                price: ${parseFloat(price)}, date: \"${date}\"}) {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                }\n            }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                console.log(resData);\n                props.fetchEvents();\n                props.closeModal();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <AppModalContent>\n            <React.Fragment>\n                <Typography className={classes.header} variant=\"h6\">\n                    Create Event\n                </Typography>\n\n                <form\n                    className={classNames(classes.content, 'create-event-modal-content__form')}\n                    onSubmit={submitHandler}\n                >\n                    <FormGroup className=\"create-event-modal-content__title\">\n                        <TextField id=\"title\" variant=\"outlined\" label=\"Title\" inputRef={inputTitle} />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__description\">\n                        <TextField\n                            id=\"description\"\n                            variant=\"outlined\"\n                            label=\"description\"\n                            inputRef={inputDescription}\n                        />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__date\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineDatePicker\n                                keyboard\n                                clearable\n                                variant=\"outlined\"\n                                label=\"Date\"\n                                onChange={HandleDayOfTheYearChange}\n                                value={selectedDayOfTeYear}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__time\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineTimePicker\n                                keyboard\n                                variant=\"outlined\"\n                                keyboardIcon={<Alarm />}\n                                label=\"Time\"\n                                onChange={handleTimeChange}\n                                value={selectedTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__price\">\n                        <TextField id=\"price\" variant=\"outlined\" label=\"price\" inputRef={inputPrice} />\n                    </FormGroup>\n\n                    <Divider className=\"create-event-modal-content__actions-divider\" />\n                    <div className={classNames(classes.actions, 'create-event-modal-content__actions')}>\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={props.closeModal}\n                            style={appClasses.primaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                            Create\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        </AppModalContent>\n    );\n};\n\nexport default withStyles(style as any)(CreateEventModalContent);\n","import React from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport Axios from 'axios';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport config from '../../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst EventItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    function bookEventHandler() {\n        if (!userLoggedIn) {\n            alert('you should log in to book an event');\n            return;\n        }\n        const requestBody = {\n            query: `mutation {\n                bookEvent(eventId: \"${event._id}\") {\n                  _id\n                  createdAt\n                  updatedAt\n                }\n              }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                console.log(resData);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    const { AuthState } = useStateValue();\n    const { event } = props;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === event.creator._id;\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={event.title}\n                action={\n                    isThisUser && (\n                        <IconButton aria-label=\"Edit\">\n                            <Create fontSize=\"small\" />\n                        </IconButton>\n                    )\n                }\n            />\n            <CardContent className={classes.cardContent}>\n                <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {event.description}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                        {new Date(event.date).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"h6\">{event.price} USD </Typography>\n                </span>\n                {isThisUser && (\n                    <span className={classes.cardContentItem}>\n                        <Typography variant=\"caption\">You are the owner of this event</Typography>\n                    </span>\n                )}\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button variant=\"text\">Details</Button>\n                {!isThisUser && (\n                    <Button variant=\"text\" color=\"primary\" onClick={bookEventHandler}>\n                        Book this\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n};\n\ntype Props = {\n    event: any;\n    classes: any;\n};\n\nexport default withStyles(style as any)(EventItem);\n","import React from 'react';\nimport EventItem from './EventItem';\nimport { withStyles, WithStyles, Theme } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({});\n\ntype PropsWithStyles = Props & WithStyles<''>;\n\nconst EventsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { EventsState } = useStateValue();\n    const EventsList = EventsState.events.map((event: any) => <EventItem event={event} key={event._id} />);\n\n    return <section>{EventsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsList);\n","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Card, Modal, Typography, Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport '../../index.scss';\nimport CreateEventModalContent from './CreateEventModalContent';\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport EventsList from './EventsList/EventsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card'>;\n\nconst EventsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { EventsDispatch } = useStateValue();\n    // useState(1) is because 0 doesn't render the component\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n        const requestBody = {\n            query: `query {\n                events {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                    creator{\n                        _id\n                        email\n                    }\n                }\n            }`,\n        };\n\n        EventsDispatch({ type: 'FETCH_EVENTS_PENDING' });\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                EventsDispatch({ type: 'FETCH_EVENTS_FULFILLED', events: resData.events });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const { AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [isModalOpen, setModalOpen] = useState(false);\n    function closeModal() {\n        setModalOpen(false);\n    }\n\n    return (\n        <div className=\"events-page app-centered-page\">\n            {Boolean(progress) && <LinearProgress variant=\"determinate\" value={progress} />}\n            {userLoggedIn && (\n                <React.Fragment>\n                    <Card className={classes.card}>\n                        <Typography>Share your own Event!</Typography>\n\n                        <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={_ => setModalOpen(true)}>\n                            Create Event\n                        </Button>\n                    </Card>\n                    <Modal open={isModalOpen} onClose={_ => setModalOpen(false)}>\n                        <CreateEventModalContent closeModal={closeModal} fetchEvents={fetchEvents} />\n                    </Modal>\n                </React.Fragment>\n            )}\n            <EventsList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsPage);\n","import React from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create, Delete } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { IBooking } from '../../../shared/models/booking.model';\nimport Axios from 'axios';\nimport config from '../../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst BookingItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState, BookingsDispatch } = useStateValue();\n    const { booking } = props;\n    const { event } = booking;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === booking.event.creator._id;\n    function deleteBookingHandler() {\n        if (!userLoggedIn) {\n            alert('you should log in to cancel an event');\n            return;\n        }\n        const requestBody = {\n            query: `mutation {\n                cancelBooking(bookingId: \"${booking._id}\") {\n                  _id\n                  title\n                }\n              }`,\n        };\n        BookingsDispatch({ type: 'CANCEL_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_FULFILLED', bookingId: booking._id });\n\n                console.log(resData);\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_REJECTED' });\n\n                console.log(err);\n            });\n    }\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={event.title}\n                action={\n                    <React.Fragment>\n                        {isThisUser && (\n                            <IconButton aria-label=\"Edit\">\n                                <Create fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"Delete\" onClick={deleteBookingHandler}>\n                            <Delete fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n            <CardContent className={classes.cardContent}>\n                <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {event.description}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                        {new Date(event.date).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"h6\">{event.price} USD </Typography>\n                </span>\n                {isThisUser && (\n                    <span className={classes.cardContentItem}>\n                        <Typography variant=\"caption\">You are the owner of this event</Typography>\n                    </span>\n                )}\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button variant=\"text\">Details</Button>\n            </CardActions>\n        </Card>\n    );\n};\n\ntype Props = {\n    booking: IBooking;\n    classes: any;\n};\n\nexport default withStyles(style as any)(BookingItem);\n","import React from 'react';\nimport BookingItem from './BookingItem';\nimport { withStyles, WithStyles, Theme } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({});\n\ntype PropsWithStyles = Props & WithStyles<''>;\n\nconst BookingsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { BookingsState } = useStateValue();\n    const BookingsList = BookingsState.bookings.map((booking: any) => (\n        <BookingItem booking={booking} key={booking._id} />\n    ));\n\n    return <section>{BookingsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsList);\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport BookingList from './BookingsList/BookingsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'list' | 'card'>;\n\nconst BookingsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { BookingsDispatch, AuthState } = useStateValue();\n    // useState(1) is because 0 doesn't render the component\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `query {\n                bookings {\n                    _id\n                    createdAt\n                    event {\n                        _id\n                        title\n                        date\n                        price\n                        creator {\n                            _id\n                        }\n                    }\n                }\n            }`,\n        };\n        BookingsDispatch({ type: 'FETCH_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_FULFILLED', bookings: resData.bookings });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <div className=\"bookins-page .app-centered-page\">\n            {Boolean(progress) && <LinearProgress variant=\"determinate\" value={progress} />}\n            <BookingList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsPage);\n","import React from 'react';\n\nimport './drawerToggleButton.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst DrawerToggleButton = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return (\n        <button className=\"drawer-toggle-button\" onClick={clickHandler}>\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n        </button>\n    );\n};\n\nexport default DrawerToggleButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useStateValue } from '../../Store/Store';\n\nconst NavigationItems = () => {\n    const { AuthState } = useStateValue();\n    return (\n        <nav>\n            <ul>\n                {!AuthState.token && (\n                    <li>\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </li>\n                )}\n                <li>\n                    <NavLink to=\"/events\">Events</NavLink>\n                </li>\n                {AuthState.token && (\n                    <li>\n                        <NavLink to=\"/bookings\">Bookings</NavLink>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavigationItems;\n","import React, { useState } from 'react';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport NavigationItems from './NavigationItems';\nimport MuIconButton from '@material-ui/core/IconButton';\nimport MuAccountCircle from '@material-ui/icons/AccountCircle';\nimport MuMenu from '@material-ui/core/Menu';\nimport MuMenuItem from '@material-ui/core/MenuItem';\n\nimport './mainNavigation.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst MainNavigation = () => {\n    const { AuthState, AuthDispatch } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [anchorEl, setAnchorEl] = useState();\n    const isMenuOpen = Boolean(anchorEl);\n\n    function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLogout() {\n        AuthDispatch({ type: 'AUTH_LOG_OUT' });\n        closeMenu();\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    const renderMenu = (\n        <MuMenu anchorEl={anchorEl} open={isMenuOpen} onClose={closeMenu}>\n            <MuMenuItem onClick={void 0}>Profile</MuMenuItem>\n            <MuMenuItem onClick={handleLogout}>Logout</MuMenuItem>\n        </MuMenu>\n    );\n\n    return (\n        <header className=\"main-navigation\">\n            <span className=\"main-navigation__logo\">\n                <span className=\"main-navigation__button\">\n                    <DrawerToggleButton />\n                </span>\n                <h1>EasyEvent</h1>\n            </span>\n            <span className=\"main-navigation__items\">\n                <span className=\"main-navigation__links\">\n                    <NavigationItems />\n                </span>\n                {userLoggedIn && (\n                    <MuIconButton onClick={handleProfileMenuOpen}>\n                        <MuAccountCircle className=\"account-circle\" />\n                    </MuIconButton>\n                )}\n            </span>\n            {renderMenu}\n        </header>\n    );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport NavigationItems from './NavigationItems';\n\nimport './sideDrawer.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst SideDrawer = () => {\n    const { UIState } = useStateValue();\n\n    let sideDrawerClasses = ['side-drawer'];\n    if (UIState.isSideDrawOpen) {\n        sideDrawerClasses.push('side-drawer__open');\n    }\n    return (\n        <span className={sideDrawerClasses.join(' ')}>\n            <NavigationItems />\n        </span>\n    );\n};\n\nexport default SideDrawer;\n","import React from 'react';\n\nimport './backdrop.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst Backdrop = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return <div className=\"backdrop\" onClick={clickHandler} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './components/Auth/Auth';\nimport EventsPage from './components/Events/Events';\nimport BookingsPage from './components/Bookings/Bookings';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport './app.scss';\nimport SideDrawer from './components/Navigation/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport { useStateValue } from './Store/Store';\n\nfunction App() {\n    const { UIState, AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    let backdrop;\n    if (UIState.isSideDrawOpen) {\n        backdrop = <Backdrop />;\n    }\n    return (\n        <div className=\"main-content\">\n            <BrowserRouter>\n                <MainNavigation />\n                <SideDrawer />\n                {backdrop}\n                <main>\n                    <Switch>\n                        {userLoggedIn && <Redirect from=\"/\" to=\"/events\" exact />}\n                        {userLoggedIn && <Redirect from=\"/auth\" to=\"/events\" exact />}\n\n                        {!userLoggedIn && <Route path=\"/auth\" component={AuthPage} />}\n                        {userLoggedIn && <Route path=\"/bookings\" component={BookingsPage} />}\n                        <Route path=\"/events\" component={EventsPage} />\n\n                        {!userLoggedIn && <Redirect to=\"/auth\" />}\n                    </Switch>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './Store/Store';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { theme } from './shared/styles/styles';\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <StateProvider>\n            <App />\n        </StateProvider>\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}