{"version":3,"sources":["Store/Reducers/ui.reducer.tsx","Store/Reducers/auth.reducer.tsx","Store/Reducers/events.reducer.tsx","Store/Reducers/bookings.reducer.tsx","Store/Store.tsx","shared/styles/styles.tsx","config.ts","components/sharedComponents/AppSnackbar.tsx","components/Auth/Auth.tsx","components/sharedComponents/AppModalContent.tsx","components/Events/CreateEventModalContent.tsx","components/Events/EventsList/EventItem.tsx","components/Events/EventsList/EventsList.tsx","components/Events/Events.tsx","components/Bookings/BookingsList/BookingItem.tsx","components/Bookings/BookingsList/BookingsList.tsx","components/Bookings/Bookings.tsx","components/Navigation/DrawerToggleButton.tsx","components/Navigation/NavigationItems.tsx","components/Navigation/MainNavigation.tsx","components/Navigation/SideDrawer.tsx","components/Backdrop/Backdrop.tsx","App.tsx","index.tsx"],"names":["initialUIState","isSideDrawOpen","UIReducer","state","action","type","initialAuthState","token","userId","tokenExpiration","AuthReducer","initialEventsState","events","status","EventsReducer","Object","toConsumableArray","initialBookingsState","bookings","BookingsReducer","filter","booking","bookingId","_id","StateContext","createContext","useStateValue","useContext","appClasses","primaryButton","margin","modalCentered","top","left","transform","card","width","maxWidth","display","flexDirection","alignItems","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","configVars","production","BACKEND_URL","development","config","objectSpread","process","getGraphqlUrl","this","withStyles","close","padding","spacing","unit","_ref","classes","props","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","snackbarOpen","setSnackbarOpen","message","duration","centered","handleClose","useEffect","undefined","setTimeout","react_default","a","createElement","Fragment","index_es","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","id","color","aria-label","onClick","className","key","AuthPage","_isActive","AuthDispatch","isLoginForm","setIsLogInForm","_useState3","_useState4","snackbarState","setSnackbarState","_useState5","_useState6","progress","setProgress","inputEmail","useRef","inputPassword","submitHandler","asyncToGenerator","regenerator_default","mark","_callee","event","email","password","signUpData","loginData","wrap","_context","prev","next","preventDefault","current","value","trim","abrupt","query","concat","axios","url","method","data","headers","Content-Type","then","res","resData","login","_resData$login","createUser","catch","err","finally","stop","_x","apply","arguments","LinearProgress_default","variant","style","opacity","onSubmit","htmlFor","ref","Button_default","disabled","_","sharedComponents_AppSnackbar","showSnackBar","paper","position","backgroundColor","background","boxShadow","shadows","outline","children","header","content","actions","AuthState","Date","selectedDayOfTeYear","HandleDayOfTheYearChange","selectedTime","handleTimeChange","inputTitle","inputDescription","inputPrice","sharedComponents_AppModalContent","classNames","title","description","price","date","Error","modifiedDate","setDayOfYear","getDayOfYear","setHours","getHours","setMinutes","getMinutes","toISOString","constructModifiedDate","requestBody","parseFloat","Axios","Authorization","console","log","fetchEvents","closeModal","label","inputRef","material_ui_pickers_esm","utils","DateFNSUtils","keyboard","clearable","onChange","keyboardIcon","icons_index_es","cardContent","justifyContent","flexWrap","cardContentItem","flex","cardHeader","cardDescription","marginRight","cardActions","_detailsHandler","_bookEventHandler","_callee2","_context2","userLoggedIn","Boolean","isThisUser","creator","fontSize","gutterBottom","toLocaleString","EventsState","EventsList","length","map","EventsList_EventItem","fab","right","bottom","EventsDispatch","isModalOpen","setModalOpen","Fab_default","Add_default","Events_CreateEventModalContent","Events_EventsList_EventsList","_useStateValue","BookingsDispatch","_handleDetailsClick","alert","BookingsState","BookingsList","BookingsList_BookingItem","Bookings_BookingsList_BookingsList","DrawerToggleButton","UIDisptch","NavigationItems","react_router_dom","to","root","flexGrow","grow","menuButton","marginLeft","anchorEl","setAnchorEl","isMenuOpen","_handleLogout","closeMenu","_handleProfileClick","renderMenu","Menu_default","MenuItem_default","AppBar_default","Navigation_DrawerToggleButton","Navigation_NavigationItems","IconButton_default","currentTarget","AccountCircle_default","SideDrawer","sideDrawerClasses","UIState","push","join","Backdrop","App","backdrop","components_Backdrop_Backdrop","Navigation_MainNavigation","Navigation_SideDrawer","react_router","from","exact","path","component","BookingsPage","EventsPage","ReactDOM","render","styles","_useReducer","useReducer","_useReducer2","_useReducer3","_useReducer4","_useReducer5","_useReducer6","_useReducer7","_useReducer8","MainStore","Provider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a4a320c.chunk.js","sourcesContent":["import { Dispatch } from 'react';\n\nexport interface UIStore {\n    UIState: UIState;\n    UIDisptch: Dispatch<UIActions>;\n}\n\nexport interface UIState {\n    isSideDrawOpen: boolean;\n}\n\nexport const initialUIState = { isSideDrawOpen: false };\n\nexport const UIReducer = (state: UIState, action: UIActions) => {\n    switch (action.type) {\n        case 'UI_TOGGLE_SIDE_NAV':\n            return { isSideDrawOpen: !state.isSideDrawOpen };\n        default:\n            return state || initialUIState;\n    }\n};\n\n//Actions\ninterface UIToggleSideNav {\n    type: 'UI_TOGGLE_SIDE_NAV';\n}\n\ntype UIActions = UIToggleSideNav;\n","import { Dispatch } from 'react';\n\nexport interface AuthStore {\n    AuthState: AuthState;\n    AuthDispatch: Dispatch<AuthActions>;\n}\n\nexport interface AuthState {\n    userId: string | null;\n    token: string | null;\n    tokenExpiration: number | null;\n}\n\nexport const initialAuthState: AuthState = { token: null, userId: null, tokenExpiration: null };\n\nexport const AuthReducer = (state: AuthState, action: AuthActions): AuthState => {\n    switch (action.type) {\n        case 'AUTH_LOG_IN':\n            const { token, userId, tokenExpiration } = action;\n            return { token, userId, tokenExpiration };\n        case 'AUTH_LOG_OUT':\n            return initialAuthState;\n        default:\n            return state || initialAuthState;\n    }\n};\n\n// Actions\ninterface AuthLogIn {\n    type: 'AUTH_LOG_IN';\n    userId: AuthState['userId'];\n    token: AuthState['token'];\n    tokenExpiration: AuthState['tokenExpiration'];\n}\n\ninterface AuthLogOut {\n    type: 'AUTH_LOG_OUT';\n}\n\ntype AuthActions = AuthLogIn | AuthLogOut;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\n\nexport interface EventsStore {\n    EventsState: EventsState;\n    EventsDispatch: Dispatch<EventsActions>;\n}\n\nexport interface Event {\n    _id: string;\n    title: string;\n    description: string;\n    price: number;\n    date: string;\n    creator: Array<any>;\n}\n\nexport interface EventsState {\n    status: Status;\n    events: Array<Event>;\n}\n\nexport const initialEventsState: EventsState = { events: [], status: 'PRISTINE' };\n\nexport const EventsReducer = (state: EventsState, action: EventsActions): EventsState => {\n    switch (action.type) {\n        case 'FETCH_EVENTS_PENDING':\n            return { events: [...state.events], status: 'PENDING' };\n        case 'FETCH_EVENTS_FULFILLED':\n            return { events: [...action.events], status: 'FULFILLED' };\n        case 'FETCH_EVENTS_REJECTED':\n            return { events: [...state.events], status: 'REJECTED' };\n        default:\n            return state || initialEventsState;\n    }\n};\n\n// Actions\ninterface FetchEventsPending {\n    type: 'FETCH_EVENTS_PENDING';\n}\n\ninterface FetchEventsRejected {\n    type: 'FETCH_EVENTS_REJECTED';\n}\ninterface FetchEventsFulfilled {\n    type: 'FETCH_EVENTS_FULFILLED';\n    events: EventsState['events'];\n}\n\ntype EventsActions = FetchEventsPending | FetchEventsRejected | FetchEventsFulfilled;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\nimport { IBooking } from '../../shared/models/booking.model';\n\nexport interface BookingsStore {\n    BookingsState: BookingsState;\n    BookingsDispatch: Dispatch<BookingsActions>;\n}\n\nexport interface BookingsState {\n    status: Status;\n    bookings: Array<IBooking>;\n}\n\nexport const initialBookingsState: BookingsState = { bookings: [], status: 'PRISTINE' };\n\nexport const BookingsReducer = (state: BookingsState, action: BookingsActions): BookingsState => {\n    switch (action.type) {\n        case 'FETCH_BOOKINGS_PENDING':\n        case 'CANCEL_BOOKINGS_PENDING':\n            return { bookings: [...state.bookings], status: 'PENDING' };\n        case 'FETCH_BOOKINGS_FULFILLED':\n            return { bookings: [...action.bookings], status: 'FULFILLED' };\n        case 'CANCEL_BOOKINGS_FULFILLED':\n            const updatedBookings = state.bookings.filter(booking => action.bookingId !== booking._id);\n            return { bookings: updatedBookings, status: 'FULFILLED' };\n        case 'FETCH_BOOKINGS_REJECTED':\n        case 'CANCEL_BOOKINGS_REJECTED':\n            return { bookings: [...state.bookings], status: 'REJECTED' };\n        default:\n            return state || initialBookingsState;\n    }\n};\n\n// Actions\ninterface BookingsPending {\n    type: 'FETCH_BOOKINGS_PENDING' | 'CANCEL_BOOKINGS_PENDING';\n}\n\ninterface bookingsRejected {\n    type: 'FETCH_BOOKINGS_REJECTED' | 'CANCEL_BOOKINGS_REJECTED';\n}\ninterface fetchBookingsFulfilled {\n    type: 'FETCH_BOOKINGS_FULFILLED';\n    bookings: BookingsState['bookings'];\n}\ninterface cancelBookingsFulfilled {\n    type: 'CANCEL_BOOKINGS_FULFILLED';\n    bookingId: IBooking['_id'];\n}\n\ntype BookingsActions = BookingsPending | bookingsRejected | fetchBookingsFulfilled | cancelBookingsFulfilled;\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialUIState, UIReducer, UIStore } from './Reducers/ui.reducer';\nimport { initialAuthState, AuthReducer, AuthStore } from './Reducers/auth.reducer';\nimport { EventsStore, initialEventsState, EventsReducer } from './Reducers/events.reducer';\nimport { BookingsStore, initialBookingsState, BookingsReducer } from './Reducers/bookings.reducer';\n\ntype MainStore = UIStore & AuthStore & EventsStore & BookingsStore;\n\nconst StateContext = createContext({} as MainStore);\n\nexport const StateProvider = ({ children }: any) => {\n    const [UIState, UIDisptch] = useReducer(UIReducer, initialUIState);\n    const [AuthState, AuthDispatch] = useReducer(AuthReducer, initialAuthState);\n    const [EventsState, EventsDispatch] = useReducer(EventsReducer, initialEventsState);\n    const [BookingsState, BookingsDispatch] = useReducer(BookingsReducer, initialBookingsState);\n\n    const MainStore: MainStore = {\n        UIState,\n        UIDisptch,\n        AuthState,\n        AuthDispatch,\n        EventsState,\n        EventsDispatch,\n        BookingsState,\n        BookingsDispatch,\n    };\n\n    return <StateContext.Provider value={MainStore}>{children}</StateContext.Provider>;\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","import { createMuiTheme } from '@material-ui/core';\n\ninterface AppClasses {\n    primaryButton: React.CSSProperties;\n    modalCentered: React.CSSProperties;\n    card: React.CSSProperties;\n}\n\nexport const appClasses: AppClasses = {\n    primaryButton: {\n        margin: '0.25rem 0.1rem',\n    },\n    modalCentered: {\n        top: '50%',\n        left: '50%',\n        transform: `translate(-50%, -50%)`,\n    },\n    card: {\n        width: '30rem',\n        margin: '0.5rem auto',\n        maxWidth: '80%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n};\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#800080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n","interface EnvironmentVariables {\n    BACKEND_URL: string;\n}\n\ninterface ConfigVars {\n    [key: string]: EnvironmentVariables;\n}\n\nconst configVars: ConfigVars = {\n    production: {\n        BACKEND_URL: 'https://easy-event-0.herokuapp.com',\n    },\n    development: {\n        BACKEND_URL: 'http://localhost:3000',\n    },\n};\n\nconst getConfig = (environment: any): EnvironmentVariables => {\n    return configVars[environment];\n};\n\ninterface Config extends EnvironmentVariables {\n    getGraphqlUrl: () => string;\n}\n\nconst config: Config = {\n    ...getConfig(process.env.REACT_APP_STAGE),\n\n    // Add common config values here\n    getGraphqlUrl: function() {\n        return this.BACKEND_URL + '/graphql';\n    },\n};\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, Button, Snackbar, IconButton } from '@material-ui/core';\nimport { IStyles } from '../../shared/models/styles.model';\nimport { Close } from '@material-ui/icons';\n\nconst style = (theme: Theme): IStyles => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\ntype Props = {\n    message: string;\n    duration?: number; // in seconds\n    centered?: boolean;\n};\n\ntype PropsWithStyles = Props & WithStyles<'close'>;\n\nconst AppSnackbar: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const [snackbarOpen, setSnackbarOpen] = useState(true);\n    const { message, duration, centered } = props;\n\n    function handleClose() {\n        setSnackbarOpen(false);\n    }\n\n    useEffect(() => {\n        if (duration !== null && duration !== undefined) {\n            setTimeout(() => {\n                setSnackbarOpen(false);\n            }, duration);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: centered ? 'center' : 'left',\n                }}\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{message}</span>}\n                action={[\n                    <Button\n                        color=\"secondary\"\n                        aria-label=\"Close\"\n                        onClick={handleClose}\n                        className={classes.close}\n                        key=\"close\"\n                    >\n                        DISMISS\n                    </Button>,\n                ]}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(style as any)(AppSnackbar);\n","import React, { useRef, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from 'axios';\n\nimport './auth.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { appClasses } from '../../shared/styles/styles';\nimport config from '../../config';\nimport AppSnackbar from '../sharedComponents/AppSnackbar';\n\ntype SnackbarState =\n    | 'PRISTINE'\n    | 'ATTEMPT_WITH_EMPTY_fORM'\n    | 'ERROR'\n    | 'LOGIN_WRONG_CREDENTIALS'\n    | 'SIGNUP_USER_EXISTS'\n    | 'SIGNUP_SUCCESS';\n\nconst AuthPage = () => {\n    let _isActive: boolean = true;\n\n    const { AuthDispatch } = useStateValue();\n\n    const [isLoginForm, setIsLogInForm] = useState(true);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n    const [progress, setProgress] = useState(0);\n\n    const inputEmail = useRef({} as HTMLInputElement);\n    const inputPassword = useRef({} as HTMLInputElement);\n\n    const submitHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (_isActive) {\n            await setSnackbarState('PRISTINE'); //important as snackbar appear only when state changes\n        }\n\n        const email = inputEmail.current.value.trim();\n        const password = inputPassword.current.value.trim();\n        if (!email || !password) {\n            if (_isActive) {\n                await setSnackbarState('ATTEMPT_WITH_EMPTY_fORM');\n            }\n            return;\n        }\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const signUpData = {\n            query: `\n            mutation {\n                createUser(userInput: {email:\"${email}\", password:\"${password}\"}) {\n                  _id\n                  email\n                }\n              }\n            `,\n        };\n        const loginData = {\n            query: `\n            query {\n                login(email:\"${email}\", password:\"${password}\") {\n                  userId\n                  token\n                  tokenExpiration\n                }\n              }\n            `,\n        };\n        axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: isLoginForm ? loginData : signUpData,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    if (_isActive) {\n                        return setSnackbarState('ERROR');\n                    }\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                setProgress(100);\n                switch (isLoginForm) {\n                    case true: // is login form\n                        if (!resData.login) {\n                            if (_isActive) {\n                                return setSnackbarState('LOGIN_WRONG_CREDENTIALS');\n                            }\n                        }\n                        if (_isActive) {\n                            const { token, userId, tokenExpiration } = resData.login;\n                            AuthDispatch({ type: 'AUTH_LOG_IN', token, userId, tokenExpiration });\n                            return;\n                        }\n\n                    case false: // is signup form\n                        if (!resData.createUser) {\n                            if (_isActive) {\n                                return setSnackbarState('SIGNUP_USER_EXISTS');\n                            }\n                        }\n                        if (_isActive) {\n                            return setSnackbarState('SIGNUP_SUCCESS');\n                        }\n                }\n            })\n            .catch(err => {\n                if (_isActive) {\n                    return setSnackbarState('ERROR');\n                }\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    };\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'LOGIN_WRONG_CREDENTIALS':\n                return <AppSnackbar message=\"Wrong credentials\" centered />;\n            case 'SIGNUP_USER_EXISTS':\n                return <AppSnackbar message=\"User already exists\" centered />;\n            case 'SIGNUP_SUCCESS':\n                return <AppSnackbar message=\"User Creation have been SUCCESFULL\" centered />;\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" centered />;\n            case 'ATTEMPT_WITH_EMPTY_fORM':\n                return <AppSnackbar message=\"Please provide both Email and Password\" centered />;\n            default:\n                return <div />;\n        }\n    };\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n\n            <form className=\"auth-page\" onSubmit={submitHandler}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input type=\"email\" id=\"email\" ref={inputEmail} />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" ref={inputPassword} />\n                </div>\n                <Button\n                    disabled={0 < progress && progress < 100}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    style={appClasses.primaryButton}\n                >\n                    {isLoginForm ? 'Login' : 'Signup'}\n                </Button>\n                <Button\n                    variant=\"text\"\n                    color=\"primary\"\n                    type=\"button\"\n                    style={appClasses.primaryButton}\n                    onClick={_ => setIsLogInForm(!isLoginForm)}\n                >\n                    Switch to {isLoginForm ? 'Signup' : 'Login'}\n                </Button>\n            </form>\n\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport { IStyles } from '../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        maxWidth: '80%',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        outline: 'none',\n    },\n});\n\ntype Props = {\n    children: JSX.Element;\n};\n\ntype PropsWithStyles = Props & WithStyles<'paper'>;\n\nconst AppModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    return (\n        <div className={classes.paper} style={appClasses.modalCentered}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default withStyles(style as any)(AppModalContent);\n","import React, { useRef, useState } from 'react';\nimport { Theme, withStyles, WithStyles, Typography, Divider, Button, FormGroup, TextField } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport AppModalContent from '../sharedComponents/AppModalContent';\nimport { Alarm } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, InlineDatePicker, InlineTimePicker } from 'material-ui-pickers';\nimport DateFNSUtils from '@date-io/date-fns';\nimport { setHours, getHours, setDayOfYear, getDayOfYear, setMinutes, getMinutes } from 'date-fns';\nimport classNames from 'classnames';\n\nimport './createEventModalContent.scss';\nimport Axios from 'axios';\nimport { useStateValue } from '../../Store/Store';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        padding: '0.3rem 1.5rem',\n    },\n    content: {\n        margin: '1.5rem',\n    },\n    actions: {},\n});\n\ntype Props = {\n    closeModal: any;\n    fetchEvents: any;\n};\n\ntype PropsWithStyles = Props & WithStyles<'header' | 'content' | 'actions'>;\n\nconst CreateEventModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState } = useStateValue();\n    const [selectedDayOfTeYear, HandleDayOfTheYearChange] = useState(new Date());\n    const [selectedTime, handleTimeChange] = useState(new Date());\n\n    const inputTitle = useRef({} as HTMLInputElement);\n    const inputDescription = useRef({} as HTMLInputElement);\n    const inputPrice = useRef({} as HTMLInputElement);\n\n    function constructModifiedDate(selectedDayOfTeYear: Date, selectedTime: Date) {\n        if (!selectedDayOfTeYear || !selectedTime) {\n            throw new Error('Date and time must be selected');\n        }\n        let modifiedDate = new Date();\n        modifiedDate = setDayOfYear(modifiedDate, getDayOfYear(selectedDayOfTeYear));\n        modifiedDate = setHours(modifiedDate, getHours(selectedTime));\n        modifiedDate = setMinutes(modifiedDate, getMinutes(selectedTime));\n        return modifiedDate.toISOString();\n    }\n\n    function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const title = inputTitle.current.value.trim();\n        const description = inputDescription.current.value.trim();\n        const price = inputPrice.current.value.trim();\n        const date = constructModifiedDate(selectedDayOfTeYear, selectedTime);\n\n        if (!title || !description || !price || !date) {\n            throw new Error('All input must be selected');\n        }\n\n        const requestBody = {\n            query: `mutation {\n                createEvent(eventInput: {title: \"${title}\", description: \"${description}\",\n                price: ${parseFloat(price)}, date: \"${date}\"}) {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                }\n            }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                console.log(resData);\n                props.fetchEvents();\n                props.closeModal();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <AppModalContent>\n            <React.Fragment>\n                <Typography className={classes.header} variant=\"h6\">\n                    Create Event\n                </Typography>\n\n                <form\n                    className={classNames(classes.content, 'create-event-modal-content__form')}\n                    onSubmit={submitHandler}\n                >\n                    <FormGroup className=\"create-event-modal-content__title\">\n                        <TextField id=\"title\" variant=\"outlined\" label=\"Title\" inputRef={inputTitle} />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__description\">\n                        <TextField\n                            id=\"description\"\n                            variant=\"outlined\"\n                            label=\"description\"\n                            inputRef={inputDescription}\n                        />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__date\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineDatePicker\n                                keyboard\n                                clearable\n                                variant=\"outlined\"\n                                label=\"Date\"\n                                onChange={HandleDayOfTheYearChange}\n                                value={selectedDayOfTeYear}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__time\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineTimePicker\n                                keyboard\n                                variant=\"outlined\"\n                                keyboardIcon={<Alarm />}\n                                label=\"Time\"\n                                onChange={handleTimeChange}\n                                value={selectedTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__price\">\n                        <TextField id=\"price\" variant=\"outlined\" label=\"price\" inputRef={inputPrice} />\n                    </FormGroup>\n\n                    <Divider className=\"create-event-modal-content__actions-divider\" />\n                    <div className={classNames(classes.actions, 'create-event-modal-content__actions')}>\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={props.closeModal}\n                            style={appClasses.primaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                            Create\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        </AppModalContent>\n    );\n};\n\nexport default withStyles(style as any)(CreateEventModalContent);\n","import React, { useState, useEffect } from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport Axios from 'axios';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport config from '../../../config';\nimport AppSnackbar from '../../sharedComponents/AppSnackbar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'USER_NOT_LOGGED_IN' | 'ERROR';\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst EventItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const [progress, setProgress] = useState(0);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n\n    async function detailsHandler() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n        if (_isActive) {\n            await setSnackbarState('NOT_IMPLEMENTED_YET');\n        }\n    }\n\n    async function bookEventHandler() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n\n        if (!userLoggedIn) {\n            if (_isActive) {\n                await setSnackbarState('USER_NOT_LOGGED_IN');\n            }\n            return;\n        }\n\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `mutation {\n                bookEvent(eventId: \"${event._id}\") {\n                  _id\n                  createdAt\n                  updatedAt\n                }\n              }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .finally(() => {\n                if (_isActive) {\n                    setProgress(0);\n                }\n            });\n    }\n    const { AuthState } = useStateValue();\n    const { event } = props;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === event.creator._id;\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" />;\n            case 'USER_NOT_LOGGED_IN':\n                return <AppSnackbar message=\"You must log in to book this event\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <LinearProgress\n                variant=\"determinate\"\n                value={progress}\n                style={{ opacity: progress ? 1 : 0 }}\n                className={classes.card}\n            />\n\n            <Card className={classes.card}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    title={event.title}\n                    action={\n                        isThisUser && (\n                            <IconButton aria-label=\"Edit\">\n                                <Create fontSize=\"small\" />\n                            </IconButton>\n                        )\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {event.description}\n                        </Typography>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {new Date(event.date).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"h6\">{event.price} USD </Typography>\n                    </span>\n                    {isThisUser && (\n                        <span className={classes.cardContentItem}>\n                            <Typography variant=\"caption\">You are the owner of this event</Typography>\n                        </span>\n                    )}\n                </CardContent>\n                <CardActions className={classes.cardActions}>\n                    <Button variant=\"text\" onClick={detailsHandler}>\n                        Details\n                    </Button>\n                    {!isThisUser && (\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={bookEventHandler}\n                            disabled={0 < progress && progress < 100}\n                        >\n                            Book this\n                        </Button>\n                    )}\n                </CardActions>\n            </Card>\n\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {\n    event: any;\n    classes: any;\n};\n\nexport default withStyles(style as any)(EventItem);\n","import React from 'react';\nimport EventItem from './EventItem';\nimport { withStyles, WithStyles, Theme, Card, Typography } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { appClasses } from '../../../shared/styles/styles';\n\nconst style = (theme: Theme): IStyles => ({\n    card: {\n        padding: '3rem',\n        ...appClasses.card,\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card'>;\n\nconst EventsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { EventsState } = useStateValue();\n    const EventsList =\n        EventsState.events.length > 0 ? (\n            EventsState.events.map((event: any) => <EventItem event={event} key={event._id} />)\n        ) : (\n            <Card className={classes.card}>\n                <Typography variant=\"h5\">There are no events yet</Typography>\n            </Card>\n        );\n\n    return <section>{EventsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport '../../index.scss';\nimport CreateEventModalContent from './CreateEventModalContent';\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport EventsList from './EventsList/EventsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    fab: {\n        position: 'fixed',\n        right: '5%',\n        bottom: '2rem',\n        margin: theme.spacing.unit,\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card' | 'fab'>;\n\nconst EventsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { EventsDispatch } = useStateValue();\n    const [progress, setProgress] = useState(0);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n        const requestBody = {\n            query: `query {\n                events {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                    creator{\n                        _id\n                        email\n                    }\n                }\n            }`,\n        };\n\n        EventsDispatch({ type: 'FETCH_EVENTS_PENDING' });\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                EventsDispatch({ type: 'FETCH_EVENTS_FULFILLED', events: resData.events });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const { AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [isModalOpen, setModalOpen] = useState(false);\n    function closeModal() {\n        setModalOpen(false);\n    }\n\n    return (\n        <div className=\"events-page app-centered-page\">\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n            {userLoggedIn && (\n                <React.Fragment>\n                    <Fab className={classes.fab} color=\"primary\" type=\"button\" onClick={_ => setModalOpen(true)}>\n                        <AddIcon />\n                    </Fab>\n                    <Modal open={isModalOpen} onClose={_ => setModalOpen(false)}>\n                        <CreateEventModalContent closeModal={closeModal} fetchEvents={fetchEvents} />\n                    </Modal>\n                </React.Fragment>\n            )}\n            <EventsList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsPage);\n","import React, { useEffect, useState } from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create, Delete } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { IBooking } from '../../../shared/models/booking.model';\nimport Axios from 'axios';\nimport config from '../../../config';\nimport AppSnackbar from '../../sharedComponents/AppSnackbar';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'ERROR';\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst BookingItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const [progress, setProgress] = useState(0);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n\n    const { AuthState, BookingsDispatch } = useStateValue();\n    const { booking } = props;\n    const { event } = booking;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === booking.event.creator._id;\n    function deleteBookingHandler() {\n        if (!userLoggedIn) {\n            alert('you should log in to cancel an event');\n            return;\n        }\n        const requestBody = {\n            query: `mutation {\n                cancelBooking(bookingId: \"${booking._id}\") {\n                  _id\n                  title\n                }\n              }`,\n        };\n        BookingsDispatch({ type: 'CANCEL_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_FULFILLED', bookingId: booking._id });\n\n                console.log(resData);\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_REJECTED' });\n\n                console.log(err);\n            });\n    }\n\n    async function handleDetailsClick() {\n        if (_isActive) {\n            await setSnackbarState('PRISTINE');\n        }\n        if (_isActive) {\n            await setSnackbarState('NOT_IMPLEMENTED_YET');\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Card className={classes.card}>\n                <CardHeader\n                    className={classes.cardHeader}\n                    title={event.title}\n                    action={\n                        <React.Fragment>\n                            {isThisUser && (\n                                <IconButton aria-label=\"Edit\">\n                                    <Create fontSize=\"small\" />\n                                </IconButton>\n                            )}\n                            <IconButton aria-label=\"Delete\" onClick={deleteBookingHandler}>\n                                <Delete fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {event.description}\n                        </Typography>\n                        <Typography variant=\"caption\" gutterBottom>\n                            {new Date(event.date).toLocaleString()}\n                        </Typography>\n                        <Typography variant=\"h6\">{event.price} USD </Typography>\n                    </span>\n                    {isThisUser && (\n                        <span className={classes.cardContentItem}>\n                            <Typography variant=\"caption\">You are the owner of this event</Typography>\n                        </span>\n                    )}\n                </CardContent>\n                <CardActions className={classes.cardActions}>\n                    <Button onClick={handleDetailsClick} variant=\"text\">\n                        Details\n                    </Button>\n                </CardActions>\n            </Card>\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {\n    booking: IBooking;\n    classes: any;\n};\n\nexport default withStyles(style as any)(BookingItem);\n","import React from 'react';\nimport BookingItem from './BookingItem';\nimport { withStyles, WithStyles, Theme, Card, Typography } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { appClasses } from '../../../shared/styles/styles';\n\nconst style = (theme: Theme): IStyles => ({\n    card: {\n        padding: '3rem',\n        ...appClasses.card,\n    },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card'>;\n\nconst BookingsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { BookingsState } = useStateValue();\n    const BookingsList = BookingsState.bookings.length ? (\n        BookingsState.bookings.map((booking: any) => <BookingItem booking={booking} key={booking._id} />)\n    ) : (\n        <Card className={classes.card}>\n            <Typography variant=\"h5\">You haven't booked any event yet</Typography>\n        </Card>\n    );\n\n    return <section>{BookingsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsList);\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport BookingList from './BookingsList/BookingsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'list' | 'card'>;\n\nconst BookingsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { BookingsDispatch, AuthState } = useStateValue();\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `query {\n                bookings {\n                    _id\n                    createdAt\n                    event {\n                        _id\n                        title\n                        date\n                        price\n                        creator {\n                            _id\n                        }\n                    }\n                }\n            }`,\n        };\n        BookingsDispatch({ type: 'FETCH_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_FULFILLED', bookings: resData.bookings });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <div className=\"bookins-page .app-centered-page\">\n            <LinearProgress variant=\"determinate\" value={progress} style={{ opacity: progress ? 1 : 0 }} />\n            <BookingList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsPage);\n","import React from 'react';\n\nimport './drawerToggleButton.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst DrawerToggleButton = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return (\n        <button className=\"drawer-toggle-button\" onClick={clickHandler}>\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n        </button>\n    );\n};\n\nexport default DrawerToggleButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useStateValue } from '../../Store/Store';\n\nconst NavigationItems = () => {\n    const { AuthState } = useStateValue();\n    return (\n        <nav>\n            <ul>\n                {!AuthState.token && (\n                    <li>\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </li>\n                )}\n                <li>\n                    <NavLink to=\"/events\">Events</NavLink>\n                </li>\n                {AuthState.token && (\n                    <li>\n                        <NavLink to=\"/bookings\">Bookings</NavLink>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavigationItems;\n","import React, { useState } from 'react';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport NavigationItems from './NavigationItems';\nimport MuIconButton from '@material-ui/core/IconButton';\nimport MuAccountCircle from '@material-ui/icons/AccountCircle';\nimport MuMenu from '@material-ui/core/Menu';\nimport MuMenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './mainNavigation.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { Toolbar, Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { IStyles } from '../../shared/models/styles.model';\nimport AppSnackbar from '../sharedComponents/AppSnackbar';\n\nconst styles = (theme: Theme): IStyles => ({\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\ntype SnackbarState = 'PRISTINE' | 'NOT_IMPLEMENTED_YET' | 'LOGOUT_SUCCESFULL' | 'ERROR';\n\ntype PropsWithStyles = Props & WithStyles<'root' | 'grow' | 'menuButton'>;\n\nconst MainNavigation: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { AuthState, AuthDispatch } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [anchorEl, setAnchorEl] = useState();\n    const isMenuOpen = Boolean(anchorEl);\n    const [snackbarState, setSnackbarState] = useState('PRISTINE' as SnackbarState);\n\n    function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    async function handleLogout() {\n        await setSnackbarState('PRISTINE');\n        await AuthDispatch({ type: 'AUTH_LOG_OUT' });\n        closeMenu();\n        await setSnackbarState('LOGOUT_SUCCESFULL');\n    }\n\n    async function handleProfileClick() {\n        await setSnackbarState('PRISTINE');\n        closeMenu();\n        await setSnackbarState('NOT_IMPLEMENTED_YET');\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    const renderMenu = (\n        <MuMenu anchorEl={anchorEl} open={isMenuOpen} onClose={closeMenu}>\n            <MuMenuItem onClick={handleProfileClick}>Profile</MuMenuItem>\n            <MuMenuItem onClick={handleLogout}>Logout</MuMenuItem>\n        </MuMenu>\n    );\n\n    const showSnackBar = () => {\n        switch (snackbarState) {\n            case 'ERROR':\n                return <AppSnackbar message=\"Error!: Check connection or call administrator\" />;\n            case 'NOT_IMPLEMENTED_YET':\n                return <AppSnackbar message=\"Feature not implemented yet\" duration={3000} />;\n            case 'LOGOUT_SUCCESFULL':\n                return <AppSnackbar message=\"You have succesfully logout\" duration={3000} />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <AppBar className=\"main-navigation\">\n                <Toolbar className=\"main-navigation__toolbar\">\n                    <span className=\"main-navigation__logo\">\n                        <span className=\"main-navigation__button\">\n                            <DrawerToggleButton />\n                        </span>\n                        <h1>EasyEvent</h1>\n                    </span>\n                    <span className=\"main-navigation__items\">\n                        <span className=\"main-navigation__links\">\n                            <NavigationItems />\n                        </span>\n                        {userLoggedIn && (\n                            <MuIconButton onClick={handleProfileMenuOpen}>\n                                <MuAccountCircle className=\"account-circle\" />\n                            </MuIconButton>\n                        )}\n                    </span>\n                    {renderMenu}\n                </Toolbar>\n            </AppBar>\n            {showSnackBar()}\n        </React.Fragment>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(styles as any)(MainNavigation);\n","import React from 'react';\nimport NavigationItems from './NavigationItems';\n\nimport './sideDrawer.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst SideDrawer = () => {\n    const { UIState } = useStateValue();\n\n    let sideDrawerClasses = ['side-drawer'];\n    if (UIState.isSideDrawOpen) {\n        sideDrawerClasses.push('side-drawer__open');\n    }\n    return (\n        <span className={sideDrawerClasses.join(' ')}>\n            <NavigationItems />\n        </span>\n    );\n};\n\nexport default SideDrawer;\n","import React from 'react';\n\nimport './backdrop.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst Backdrop = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return <div className=\"backdrop\" onClick={clickHandler} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './components/Auth/Auth';\nimport EventsPage from './components/Events/Events';\nimport BookingsPage from './components/Bookings/Bookings';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport './app.scss';\nimport SideDrawer from './components/Navigation/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport { useStateValue } from './Store/Store';\n\nfunction App() {\n    const { UIState, AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    let backdrop;\n    if (UIState.isSideDrawOpen) {\n        backdrop = <Backdrop />;\n    }\n    return (\n        <div className=\"main-content\">\n            <BrowserRouter>\n                <MainNavigation />\n                <SideDrawer />\n                {backdrop}\n                <main>\n                    <Switch>\n                        {userLoggedIn && <Redirect from=\"/\" to=\"/events\" exact />}\n                        {userLoggedIn && <Redirect from=\"/auth\" to=\"/events\" exact />}\n\n                        {!userLoggedIn && <Route path=\"/auth\" component={AuthPage} />}\n                        {userLoggedIn && <Route path=\"/bookings\" component={BookingsPage} />}\n                        <Route path=\"/events\" component={EventsPage} />\n\n                        {!userLoggedIn && <Redirect to=\"/auth\" />}\n                    </Switch>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './Store/Store';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { theme } from './shared/styles/styles';\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <StateProvider>\n            <App />\n        </StateProvider>\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}