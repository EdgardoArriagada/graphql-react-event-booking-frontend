{"version":3,"sources":["Store/Reducers/ui.reducer.tsx","Store/Reducers/auth.reducer.tsx","Store/Reducers/events.reducer.tsx","Store/Reducers/bookings.reducer.tsx","Store/Store.tsx","shared/styles/styles.tsx","config.ts","components/sharedComponents/AppSnackbar.tsx","components/Auth/Auth.tsx","components/sharedComponents/AppModalContent.tsx","components/Events/CreateEventModalContent.tsx","components/Events/EventsList/EventItem.tsx","components/Events/EventsList/EventsList.tsx","components/Events/Events.tsx","components/Bookings/BookingsList/BookingItem.tsx","components/Bookings/BookingsList/BookingsList.tsx","components/Bookings/Bookings.tsx","components/Navigation/DrawerToggleButton.tsx","components/Navigation/NavigationItems.tsx","components/Navigation/MainNavigation.tsx","components/Navigation/SideDrawer.tsx","components/Backdrop/Backdrop.tsx","App.tsx","index.tsx"],"names":["initialUIState","isSideDrawOpen","UIReducer","state","action","type","initialAuthState","token","userId","tokenExpiration","AuthReducer","initialEventsState","events","status","EventsReducer","Object","toConsumableArray","initialBookingsState","bookings","BookingsReducer","filter","booking","bookingId","_id","StateContext","createContext","useStateValue","useContext","appClasses","primaryButton","margin","modalCentered","top","left","transform","card","width","maxWidth","display","flexDirection","alignItems","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","configVars","production","BACKEND_URL","development","config","objectSpread","process","getGraphqlUrl","this","withStyles","close","padding","spacing","unit","_ref","classes","props","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","snackbarOpen","setSnackbarOpen","message","duration","centered","handleClose","useEffect","undefined","setTimeout","react_default","a","createElement","Fragment","index_es","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","id","color","aria-label","onClick","className","key","AuthPage","AuthDispatch","isLoginForm","setIsLogInForm","_useState3","_useState4","authFormState","setAuthFormState","inputEmail","useRef","inputPassword","sharedComponents_AppSnackbar","onSubmit","event","preventDefault","email","current","value","trim","password","signUpData","query","concat","loginData","axios","url","method","data","headers","Content-Type","then","res","resData","login","_resData$login","createUser","catch","err","htmlFor","ref","Button_default","variant","style","_","paper","position","backgroundColor","background","boxShadow","shadows","outline","children","header","content","actions","AuthState","Date","selectedDayOfTeYear","HandleDayOfTheYearChange","selectedTime","handleTimeChange","inputTitle","inputDescription","inputPrice","sharedComponents_AppModalContent","classNames","title","description","price","date","Error","modifiedDate","setDayOfYear","getDayOfYear","setHours","getHours","setMinutes","getMinutes","toISOString","constructModifiedDate","requestBody","parseFloat","Axios","Authorization","console","log","fetchEvents","closeModal","label","inputRef","material_ui_pickers_esm","utils","DateFNSUtils","keyboard","clearable","onChange","keyboardIcon","icons_index_es","cardContent","justifyContent","flexWrap","cardContentItem","flex","cardHeader","cardDescription","marginRight","cardActions","userLoggedIn","Boolean","isThisUser","creator","fontSize","gutterBottom","toLocaleString","alert","EventsList","EventsState","map","EventsList_EventItem","_isActive","EventsDispatch","progress","setProgress","finally","isModalOpen","setModalOpen","Events_CreateEventModalContent","Events_EventsList_EventsList","_useStateValue","BookingsDispatch","BookingsList","BookingsState","BookingsList_BookingItem","Bookings_BookingsList_BookingsList","DrawerToggleButton","UIDisptch","NavigationItems","react_router_dom","to","MainNavigation","anchorEl","setAnchorEl","isMenuOpen","closeMenu","renderMenu","Menu_default","MenuItem_default","Navigation_DrawerToggleButton","Navigation_NavigationItems","IconButton_default","currentTarget","AccountCircle_default","SideDrawer","sideDrawerClasses","UIState","push","join","Backdrop","App","backdrop","components_Backdrop_Backdrop","Navigation_MainNavigation","Navigation_SideDrawer","react_router","from","exact","path","component","BookingsPage","EventsPage","ReactDOM","render","styles","_useReducer","useReducer","_useReducer2","_useReducer3","_useReducer4","_useReducer5","_useReducer6","_useReducer7","_useReducer8","MainStore","Provider","src_App","document","getElementById"],"mappings":"yaAWaA,WAAiB,CAAEC,gBAAgB,IAEnCC,EAAY,SAACC,EAAgBC,GACtC,OAAQA,EAAOC,MACX,IAAK,qBACD,MAAO,CAAEJ,gBAAiBE,EAAMF,gBACpC,QACI,OAAOE,GAASH,ICLfM,EAA8B,CAAEC,MAAO,KAAMC,OAAQ,KAAMC,gBAAiB,MAE5EC,EAAc,SAACP,EAAkBC,GAC1C,OAAQA,EAAOC,MACX,IAAK,cAED,MAAO,CAAEE,MADkCH,EAAnCG,MACQC,OAD2BJ,EAA5BI,OACSC,gBADmBL,EAApBK,iBAE3B,IAAK,eACD,OAAOH,EACX,QACI,OAAOH,GAASG,YCDfK,EAAkC,CAAEC,OAAQ,GAAIC,OAAQ,YAExDC,EAAgB,SAACX,EAAoBC,GAC9C,OAAQA,EAAOC,MACX,IAAK,uBACD,MAAO,CAAEO,OAAOG,OAAAC,EAAA,EAAAD,CAAKZ,EAAMS,QAASC,OAAQ,WAChD,IAAK,yBACD,MAAO,CAAED,OAAOG,OAAAC,EAAA,EAAAD,CAAKX,EAAOQ,QAASC,OAAQ,aACjD,IAAK,wBACD,MAAO,CAAED,OAAOG,OAAAC,EAAA,EAAAD,CAAKZ,EAAMS,QAASC,OAAQ,YAChD,QACI,OAAOV,GAASQ,ICnBfM,EAAsC,CAAEC,SAAU,GAAIL,OAAQ,YAE9DM,EAAkB,SAAChB,EAAsBC,GAClD,OAAQA,EAAOC,MACX,IAAK,yBACL,IAAK,0BACD,MAAO,CAAEa,SAASH,OAAAC,EAAA,EAAAD,CAAKZ,EAAMe,UAAWL,OAAQ,WACpD,IAAK,2BACD,MAAO,CAAEK,SAASH,OAAAC,EAAA,EAAAD,CAAKX,EAAOc,UAAWL,OAAQ,aACrD,IAAK,4BAED,MAAO,CAAEK,SADef,EAAMe,SAASE,OAAO,SAAAC,GAAO,OAAIjB,EAAOkB,YAAcD,EAAQE,MAClDV,OAAQ,aAChD,IAAK,0BACL,IAAK,2BACD,MAAO,CAAEK,SAASH,OAAAC,EAAA,EAAAD,CAAKZ,EAAMe,UAAWL,OAAQ,YACpD,QACI,OAAOV,GAASc,ICtBtBO,EAAeC,wBAAc,IAsBtBC,EAAgB,kBAAMC,qBAAWH,YCtBjCI,EAAyB,CAClCC,cAAe,CACXC,OAAQ,kBAEZC,cAAe,CACXC,IAAK,MACLC,KAAM,MACNC,UAAS,yBAEbC,KAAM,CACFC,MAAO,QACPN,OAAQ,cACRO,SAAU,MACVC,QAAS,OACTC,cAAe,SACfC,WAAY,WAIPC,EAAQC,yBAAe,CAChCC,QAAS,CACLC,QAAS,CACLC,KAAM,YAGdC,WAAY,CACRC,iBAAiB,aC1BnBC,EAAyB,CAC3BC,WAAY,CACRC,YAAa,sCAEjBC,YAAa,CACTD,YAAa,0BAqBNE,EATKrC,OAAAsC,EAAA,EAAAtC,CAAA,GAPTiC,EAQMM,cADG,CAIhBC,cAAe,WACX,OAAOC,KAAKN,YAAc,6BCmCnBO,uBA5DD,SAAChB,GAAD,MAA4B,CACtCiB,MAAO,CACHC,QAASlB,EAAMmB,QAAQC,KAAO,KA0DvBJ,CA9CiC,SAAAK,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAAYC,EAA6BjD,OAAAkD,EAAA,EAAAlD,CAAA+C,EAAA,aAAAI,EAChDC,oBAAS,GADuCC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GACjFI,EADiFF,EAAA,GACnEG,EADmEH,EAAA,GAEhFI,EAAgCR,EAAhCQ,QAASC,EAAuBT,EAAvBS,SAAUC,EAAaV,EAAbU,SAE3B,SAASC,IACLJ,GAAgB,GAWpB,OARAK,oBAAU,WACW,OAAbH,QAAkCI,IAAbJ,GACrBK,WAAW,WACPP,GAAgB,IACjBE,IAER,IAGCM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAYZ,EAAW,SAAW,QAEtCa,KAAMjB,EACNkB,iBAAkB,IAClBC,QAASd,EACTe,aAAc,CACVC,mBAAoB,cAExBnB,QAASO,EAAAC,EAAAC,cAAA,QAAMW,GAAG,cAAcpB,GAChCpE,OAAQ,CACJ2E,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIU,MAAM,YACNC,aAAW,QACXC,QAASpB,EACTqB,UAAWjC,EAAQL,MACnBuC,IAAI,SALR,iBCkFLC,EAxHE,WAAM,IACXC,EAAiBzE,IAAjByE,aADWjC,EAGmBC,oBAAS,GAH5BC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GAGZkC,EAHYhC,EAAA,GAGCiC,EAHDjC,EAAA,GAAAkC,EAIuBnC,mBAAS,YAJhCoC,EAAAxF,OAAAsD,EAAA,EAAAtD,CAAAuF,EAAA,GAIZE,EAJYD,EAAA,GAIGE,EAJHF,EAAA,GAMbG,EAAaC,iBAAO,IACpBC,EAAgBD,iBAAO,IA2E7B,OACI5B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACuB,4BAAlBsB,GAA+CzB,EAAAC,EAAAC,cAAC4B,EAAD,CAAarC,QAAQ,oBAAoBE,UAAQ,IAC9E,uBAAlB8B,GAA0CzB,EAAAC,EAAAC,cAAC4B,EAAD,CAAarC,QAAQ,sBAAsBE,UAAQ,IAC3E,mBAAlB8B,GACGzB,EAAAC,EAAAC,cAAC4B,EAAD,CAAarC,QAAQ,qCAAqCE,UAAQ,IAEnD,UAAlB8B,GACGzB,EAAAC,EAAAC,cAAC4B,EAAD,CAAarC,QAAQ,iDAAiDE,UAAQ,IAGlFK,EAAAC,EAAAC,cAAA,QAAMe,UAAU,YAAYc,SApFd,SAACC,GACnBN,EAAiB,YAEjBM,EAAMC,iBACN,IAAMC,EAAQP,EAAWQ,QAAQC,MAAMC,OACjCC,EAAWT,EAAcM,QAAQC,MAAMC,OAC7C,GAAKH,GAAUI,EAAf,CAIA,IAAMC,EAAa,CACfC,MAAK,2EAAAC,OAE+BP,EAF/B,iBAAAO,OAEoDH,EAFpD,4GASHI,EAAY,CACdF,MAAK,uDAAAC,OAEcP,EAFd,iBAAAO,OAEmCH,EAFnC,iJAUTK,IAAM,CACFC,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KAAMzB,EAAcqB,EAAYH,EAChCQ,QAAS,CACLC,eAAgB,sBAGnBC,KAAK,SAAAC,GAIF,GAHmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,QAC1B4F,EAAiB,SAEjBwB,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACF,OAAQ9B,GACJ,KAAK,EACD,IAAK8B,EAAQC,MAET,YADA1B,EAAiB,2BAFzB,IAAA2B,EAM+CF,EAAQC,MAA3C5H,EANZ6H,EAMY7H,MAAOC,EANnB4H,EAMmB5H,OAAQC,EAN3B2H,EAM2B3H,gBAEvB,YADA0F,EAAa,CAAE9F,KAAM,cAAeE,QAAOC,SAAQC,oBAGvD,KAAK,EACD,OAAKyH,EAAQG,gBAIb5B,EAAiB,uBAHbA,EAAiB,yBAOhC6B,MAAM,SAAAC,GACH9B,EAAiB,cAgBjB1B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACXjB,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,SAAf,UACAzD,EAAAC,EAAAC,cAAA,SAAO5E,KAAK,QAAQuF,GAAG,QAAQ6C,IAAK/B,KAExC3B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACXjB,EAAAC,EAAAC,cAAA,SAAOuD,QAAQ,YAAf,YACAzD,EAAAC,EAAAC,cAAA,SAAO5E,KAAK,WAAWuF,GAAG,WAAW6C,IAAK7B,KAE9C7B,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAQ2D,QAAQ,YAAY9C,MAAM,UAAUxF,KAAK,SAASuI,MAAOhH,EAAWC,eACvEuE,EAAc,QAAU,UAE7BrB,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACI2D,QAAQ,YACR9C,MAAM,UACNxF,KAAK,SACLuI,MAAOhH,EAAWC,cAClBkE,QAAS,SAAA8C,GAAC,OAAIxC,GAAgBD,KALlC,aAOeA,EAAc,SAAW,YC/FzC3C,uBAzBD,SAAChB,GAAD,MAA4B,CACtCqG,MAAO,CACHC,SAAU,WACV3G,MAA4B,GAArBK,EAAMmB,QAAQC,KACrBxB,SAAU,MACV2G,gBAAiBvG,EAAME,QAAQsG,WAAWH,MAC1CI,UAAWzG,EAAM0G,QAAQ,GACzBC,QAAS,UAkBF3F,CARqC,SAAAK,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAAYC,EAA6BjD,OAAAkD,EAAA,EAAAlD,CAAA+C,EAAA,aAC5F,OACIiB,EAAAC,EAAAC,cAAA,OAAKe,UAAWjC,EAAQ+E,MAAOF,MAAOhH,EAAWG,eAC5CiC,EAAMqF,8GC2JJ5F,gCApKD,SAAChB,GAAD,MAA4B,CACtC6G,OAAQ,CACJN,gBAAiBvG,EAAME,QAAQC,QAAQC,KACvCgD,MAAO,QACPlC,QAAS,iBAEb4F,QAAS,CACLzH,OAAQ,UAEZ0H,QAAS,KA2JE/F,CAjJ6C,SAAAK,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAAYC,EAA6BjD,OAAAkD,EAAA,EAAAlD,CAAA+C,EAAA,aAC5F2F,EAAc/H,IAAd+H,UAD4FvF,EAE5CC,mBAAS,IAAIuF,MAF+BtF,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GAE7FyF,EAF6FvF,EAAA,GAExEwF,EAFwExF,EAAA,GAAAkC,EAG3DnC,mBAAS,IAAIuF,MAH8CnD,EAAAxF,OAAAsD,EAAA,EAAAtD,CAAAuF,EAAA,GAG7FuD,EAH6FtD,EAAA,GAG/EuD,EAH+EvD,EAAA,GAK9FwD,EAAapD,iBAAO,IACpBqD,EAAmBrD,iBAAO,IAC1BsD,EAAatD,iBAAO,IAgE1B,OACI5B,EAAAC,EAAAC,cAACiF,EAAD,KACInF,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYa,UAAWjC,EAAQuF,OAAQX,QAAQ,MAA/C,gBAIA5D,EAAAC,EAAAC,cAAA,QACIe,UAAWmE,IAAWpG,EAAQwF,QAAS,oCACvCzC,SA5DhB,SAAuBC,GACnBA,EAAMC,iBACN,IAAMoD,EAAQL,EAAW7C,QAAQC,MAAMC,OACjCiD,EAAcL,EAAiB9C,QAAQC,MAAMC,OAC7CkD,EAAQL,EAAW/C,QAAQC,MAAMC,OACjCmD,EAhBV,SAA+BZ,EAA2BE,GACtD,IAAKF,IAAwBE,EACzB,MAAM,IAAIW,MAAM,kCAEpB,IAAIC,EAAe,IAAIf,KAIvB,OAHAe,EAAeC,YAAaD,EAAcE,YAAahB,IACvDc,EAAeG,YAASH,EAAcI,YAAShB,KAC/CY,EAAeK,YAAWL,EAAcM,YAAWlB,KAC/BmB,cAQPC,CAAsBtB,EAAqBE,GAExD,IAAKO,IAAUC,IAAgBC,IAAUC,EACrC,MAAM,IAAIC,MAAM,8BAGpB,IAAMU,EAAc,CAChB3D,MAAK,gEAAAC,OACkC4C,EADlC,qBAAA5C,OAC2D6C,EAD3D,+BAAA7C,OAEQ2D,WAAWb,GAFnB,aAAA9C,OAEqC+C,EAFrC,sLAYTa,IAAM,CACFzD,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KAAMqD,EACNpD,QAAS,CACLC,eAAgB,mBAChBsD,cAAe,UAAY5B,EAAUlJ,SAGxCyH,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,OAC1B,MAAM,IAAI2J,MAAM,WAEpB,GAAIvC,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACFoD,QAAQC,IAAIrD,GACZlE,EAAMwH,cACNxH,EAAMyH,eAETnD,MAAM,SAAAC,GACH+C,QAAQC,IAAIhD,OAeRxD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWa,UAAU,qCACjBjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWS,GAAG,QAAQ+C,QAAQ,WAAW+C,MAAM,QAAQC,SAAU5B,KAGrEhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWa,UAAU,2CACjBjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIS,GAAG,cACH+C,QAAQ,WACR+C,MAAM,cACNC,SAAU3B,KAIlBjF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWa,UAAU,oCACjBjB,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAyBC,MAAOC,KAC5B/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACIG,UAAQ,EACRC,WAAS,EACTrD,QAAQ,WACR+C,MAAM,OACNO,SAAUrC,EACVzC,MAAOwC,MAKnB5E,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWa,UAAU,oCACjBjB,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAyBC,MAAOC,KAC5B/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACIG,UAAQ,EACRpD,QAAQ,WACRuD,aAAcnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,MACdT,MAAM,OACNO,SAAUnC,EACV3C,MAAO0C,MAKnB9E,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWa,UAAU,qCACjBjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWS,GAAG,QAAQ+C,QAAQ,WAAW+C,MAAM,QAAQC,SAAU1B,KAGrElF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASa,UAAU,gDACnBjB,EAAAC,EAAAC,cAAA,OAAKe,UAAWmE,IAAWpG,EAAQyF,QAAS,wCACxCzE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIwD,QAAQ,OACR9C,MAAM,UACNE,QAAS/B,EAAMyH,WACf7C,MAAOhH,EAAWC,eAJtB,UAQAkD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,QAAQ,YAAY9C,MAAM,UAAUxF,KAAK,SAASuI,MAAOhH,EAAWC,eAA5E,iBC1BT4B,uBA3HD,SAAChB,GAAD,MAA4B,CACtCN,KAAKpB,OAAAsC,EAAA,EAAAtC,CAAA,GAAMa,EAAWO,MACtBiK,YAAa,CACThK,MAAO,MACPE,QAAS,OACTC,cAAe,MACf8J,eAAgB,gBAChBC,SAAU,OACVxK,OAAQ,WAEZyK,gBAAiB,CACbzK,OAAQ,SACR0K,KAAM,aAEVC,WAAY,CACRrK,MAAO,MACPE,QAAS,OACTC,cAAe,MACf8J,eAAgB,iBAEpBK,gBAAiB,CACbC,YAAa,QAEjBC,YAAa,CACTxK,MAAO,MACPE,QAAS,OACT+J,eAAgB,cAiGT5I,CA1F+B,SAAAK,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAAYC,EAA6BjD,OAAAkD,EAAA,EAAAlD,CAAA+C,EAAA,iBAwC9E2F,EAAc/H,IAAd+H,UACA1C,EAAU/C,EAAV+C,MACF8F,EAAeC,QAAQrD,EAAUlJ,OACjCwM,EAAatD,EAAUjJ,SAAWuG,EAAMiG,QAAQzL,IACtD,OACIwD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMa,UAAWjC,EAAQ5B,MACrB4C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIa,UAAWjC,EAAQ0I,WACnBrC,MAAOrD,EAAMqD,MACbhK,OACI2M,GACIhI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYW,aAAW,QACnBf,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQc,SAAS,aAKjClI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAaa,UAAWjC,EAAQqI,aAC5BrH,EAAAC,EAAAC,cAAA,QAAMe,UAAWmE,IAAWpG,EAAQwI,gBAAiBxI,EAAQ2I,kBACzD3H,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,QAAQuE,cAAY,GACnCnG,EAAMsD,aAEXtF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,UAAUuE,cAAY,GACrC,IAAIxD,KAAK3C,EAAMwD,MAAM4C,kBAE1BpI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,MAAM5B,EAAMuD,MAAhC,UAEHyC,GACGhI,EAAAC,EAAAC,cAAA,QAAMe,UAAWjC,EAAQwI,iBACrBxH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,WAApB,qCAIZ5D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAaa,UAAWjC,EAAQ6I,aAC5B7H,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,QAAQ,QAAhB,YACEoE,GACEhI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,QAAQ,OAAO9C,MAAM,UAAUE,QA3EvD,WACI,GAAK8G,EAAL,CAIA,IAAM3B,EAAc,CAChB3D,MAAK,mDAAAC,OACqBT,EAAMxF,IAD3B,8HAST6J,IAAM,CACFzD,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KAAMqD,EACNpD,QAAS,CACLC,eAAgB,mBAChBsD,cAAe,UAAY5B,EAAUlJ,SAGxCyH,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,OAC1B,MAAM,IAAI2J,MAAM,WAEpB,GAAIvC,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACFoD,QAAQC,IAAIrD,KAEfI,MAAM,SAAAC,GACH+C,QAAQC,IAAIhD,UAlChB6E,MAAM,wCAyEE,iBC/GL3J,uBAbD,SAAChB,GAAD,MAA4B,IAa3BgB,CATgC,SAAAK,GAAkCA,EAA/BC,QAA+B,IAEvEsJ,EADkB3L,IAAhB4L,YACuB1M,OAAO2M,IAAI,SAACxG,GAAD,OAAgBhC,EAAAC,EAAAC,cAACuI,EAAD,CAAWzG,MAAOA,EAAOd,IAAKc,EAAMxF,QAE9F,OAAOwD,EAAAC,EAAAC,cAAA,eAAUoI,KCwGN5J,uBAzGD,SAAChB,GAAD,MAA4B,CACtCN,KAAKpB,OAAAsC,EAAA,EAAAtC,CAAA,GAAMa,EAAWO,QAwGXsB,CAnGgC,SAAAK,GAAkC,IAA/BC,EAA+BD,EAA/BC,QAC1C0J,GAAqB,EACjBC,EAAmBhM,IAAnBgM,eAFqExJ,EAI7CC,mBAAS,GAJoCC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GAItEyJ,EAJsEvJ,EAAA,GAI5DwJ,EAJ4DxJ,EAAA,GAK7E,SAASoH,IACDiC,GACAG,EAAY,IAkBhBF,EAAe,CAAErN,KAAM,yBAEvB+K,IAAM,CACFzD,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KArBgB,CAChBN,MAAK,kUAqBLO,QAAS,CACLC,eAAgB,sBAGnBC,KAAK,SAAAC,GAIF,GAHmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,QAC1B6M,EAAe,CAAErN,KAAM,0BAEvB4H,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACFwF,EAAe,CAAErN,KAAM,yBAA0BO,OAAQsH,EAAQtH,SAC7D6M,GACAG,EAAY,OAGnBtF,MAAM,SAAAC,GACHmF,EAAe,CAAErN,KAAM,4BAE1BwN,QAAQ,WACL/I,WAAW,WACH2I,GACAG,EAAY,IAEjB,OAIfhJ,oBAAU,WAEN,OADA4G,IACO,WACHiC,GAAY,IAEjB,IAlE0E,IAoErEhE,EAAc/H,IAAd+H,UACFoD,EAAeC,QAAQrD,EAAUlJ,OArEsC+F,EAsEzCnC,oBAAS,GAtEgCoC,EAAAxF,OAAAsD,EAAA,EAAAtD,CAAAuF,EAAA,GAsEtEwH,EAtEsEvH,EAAA,GAsEzDwH,EAtEyDxH,EAAA,GA2E7E,OACIxB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,iCACV8G,QAAQa,IAAa5I,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAgBwD,QAAQ,cAAcxB,MAAOwG,IAClEd,GACG9H,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMa,UAAWjC,EAAQ5B,MACrB4C,EAAAC,EAAAC,cAACE,EAAA,EAAD,8BAEAJ,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAQ2D,QAAQ,YAAY9C,MAAM,UAAUxF,KAAK,SAAS0F,QAAS,SAAA8C,GAAC,OAAIkF,GAAa,KAArF,iBAIJhJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOI,KAAMuI,EAAarI,QAAS,SAAAoD,GAAC,OAAIkF,GAAa,KACjDhJ,EAAAC,EAAAC,cAAC+I,EAAD,CAAyBvC,WAjB7C,WACIsC,GAAa,IAgBoDvC,YAAaA,MAI1EzG,EAAAC,EAAAC,cAACgJ,EAAD,SCsCGxK,uBA/HD,SAAChB,GAAD,MAA4B,CACtCN,KAAKpB,OAAAsC,EAAA,EAAAtC,CAAA,GAAMa,EAAWO,MACtBiK,YAAa,CACThK,MAAO,MACPE,QAAS,OACTC,cAAe,MACf8J,eAAgB,gBAChBC,SAAU,OACVxK,OAAQ,WAEZyK,gBAAiB,CACbzK,OAAQ,SACR0K,KAAM,aAEVC,WAAY,CACRrK,MAAO,MACPE,QAAS,OACTC,cAAe,MACf8J,eAAgB,iBAEpBK,gBAAiB,CACbC,YAAa,QAEjBC,YAAa,CACTxK,MAAO,MACPE,QAAS,OACT+J,eAAgB,cAqGT5I,CA9FiC,SAAAK,GAA4C,IAAzCC,EAAyCD,EAAzCC,QAAYC,EAA6BjD,OAAAkD,EAAA,EAAAlD,CAAA+C,EAAA,aAAAoK,EAChDxM,IAAhC+H,EADgFyE,EAChFzE,UAAW0E,EADqED,EACrEC,iBACX9M,EAAY2C,EAAZ3C,QACA0F,EAAU1F,EAAV0F,MACF8F,EAAeC,QAAQrD,EAAUlJ,OACjCwM,EAAatD,EAAUjJ,SAAWa,EAAQ0F,MAAMiG,QAAQzL,IA2C9D,OACIwD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMa,UAAWjC,EAAQ5B,MACrB4C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIa,UAAWjC,EAAQ0I,WACnBrC,MAAOrD,EAAMqD,MACbhK,OACI2E,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACK6H,GACGhI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYW,aAAW,QACnBf,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQc,SAAS,WAGzBlI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYW,aAAW,SAASC,QAtDpD,WACI,GAAK8G,EAAL,CAIA,IAAM3B,EAAc,CAChB3D,MAAK,yDAAAC,OAC2BnG,EAAQE,IADnC,6FAOT4M,EAAiB,CAAE9N,KAAM,4BACzB+K,IAAM,CACFzD,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KAAMqD,EACNpD,QAAS,CACLC,eAAgB,mBAChBsD,cAAe,UAAY5B,EAAUlJ,SAGxCyH,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,OAC1B,MAAM,IAAI2J,MAAM,WAEpB,GAAIvC,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACFiG,EAAiB,CAAE9N,KAAM,4BAA6BiB,UAAWD,EAAQE,MAEzE+J,QAAQC,IAAIrD,KAEfI,MAAM,SAAAC,GACH4F,EAAiB,CAAE9N,KAAM,6BAEzBiL,QAAQC,IAAIhD,UArChB6E,MAAM,0CAqDUrI,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQc,SAAS,cAKjClI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAaa,UAAWjC,EAAQqI,aAC5BrH,EAAAC,EAAAC,cAAA,QAAMe,UAAWmE,IAAWpG,EAAQwI,gBAAiBxI,EAAQ2I,kBACzD3H,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,QAAQuE,cAAY,GACnCnG,EAAMsD,aAEXtF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,UAAUuE,cAAY,GACrC,IAAIxD,KAAK3C,EAAMwD,MAAM4C,kBAE1BpI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,MAAM5B,EAAMuD,MAAhC,UAEHyC,GACGhI,EAAAC,EAAAC,cAAA,QAAMe,UAAWjC,EAAQwI,iBACrBxH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYwD,QAAQ,WAApB,qCAIZ5D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAaa,UAAWjC,EAAQ6I,aAC5B7H,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,QAAQ,QAAhB,eCrHDlF,uBAfD,SAAChB,GAAD,MAA4B,IAe3BgB,CAXkC,SAAAK,GAAkCA,EAA/BC,QAA+B,IAEzEqK,EADoB1M,IAAlB2M,cAC2BnN,SAASqM,IAAI,SAAClM,GAAD,OAC5C0D,EAAAC,EAAAC,cAACqJ,EAAD,CAAajN,QAASA,EAAS4E,IAAK5E,EAAQE,QAGhD,OAAOwD,EAAAC,EAAAC,cAAA,eAAUmJ,KCgFN3K,uBAtFD,SAAChB,GAAD,MAA4B,CACtCN,KAAKpB,OAAAsC,EAAA,EAAAtC,CAAA,GAAMa,EAAWO,QAqFXsB,CAhFkC,SAAAK,GAAkCA,EAA/BC,QAA+B,IAC3E0J,GAAqB,EADsDS,EAEvCxM,IAAhCyM,EAFuED,EAEvEC,iBAAkB1E,EAFqDyE,EAErDzE,UAFqDvF,EAI/CC,mBAAS,GAJsCC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GAIxEyJ,EAJwEvJ,EAAA,GAI9DwJ,EAJ8DxJ,EAAA,GAsE/E,OAPAQ,oBAAU,WAEN,OA3DI6I,GACAG,EAAY,IAoBhBO,EAAiB,CAAE9N,KAAM,2BACzB+K,IAAM,CACFzD,IAAKvE,EAAOG,gBACZqE,OAAQ,OACRC,KArBgB,CAChBN,MAAK,6YAqBLO,QAAS,CACLC,eAAgB,mBAChBsD,cAAe,UAAY5B,EAAUlJ,SAGxCyH,KAAK,SAAAC,GAIF,GAHmB,MAAfA,EAAIpH,QAAiC,MAAfoH,EAAIpH,QAC1BsN,EAAiB,CAAE9N,KAAM,4BAEzB4H,EAAIJ,KACJ,OAAOI,EAAIJ,KAAKA,OAGvBG,KAAK,SAAAE,GACFiG,EAAiB,CAAE9N,KAAM,2BAA4Ba,SAAUgH,EAAQhH,WACnEuM,GACAG,EAAY,OAGnBtF,MAAM,SAAAC,GACH4F,EAAiB,CAAE9N,KAAM,8BAE5BwN,QAAQ,WACL/I,WAAW,WACH2I,GACAG,EAAY,IAEjB,OAMJ,WACHH,GAAY,IAEjB,IAGC1I,EAAAC,EAAAC,cAAA,OAAKe,UAAU,mCACV8G,QAAQa,IAAa5I,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAgBwD,QAAQ,cAAcxB,MAAOwG,IACnE5I,EAAAC,EAAAC,cAACsJ,EAAD,SCtEGC,YAdY,WAAM,IACrBC,EAAc/M,IAAd+M,UAIR,OACI1J,EAAAC,EAAAC,cAAA,UAAQe,UAAU,uBAAuBD,QAJxB,WACjB0I,EAAU,CAAEpO,KAAM,yBAId0E,EAAAC,EAAAC,cAAA,OAAKe,UAAU,+BACfjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,+BACfjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,kCCaZ0I,GAvBS,WAAM,IAClBjF,EAAc/H,IAAd+H,UACR,OACI1E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACMwE,EAAUlJ,OACRwE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,GAAG,SAAZ,WAGR7J,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,GAAG,WAAZ,WAEHnF,EAAUlJ,OACPwE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAASC,GAAG,aAAZ,gGCyCTC,YAjDQ,WAAM,IAAAX,EACWxM,IAA5B+H,EADiByE,EACjBzE,UAAWtD,EADM+H,EACN/H,aACb0G,EAAeC,QAAQrD,EAAUlJ,OAFd2D,EAGOC,qBAHPC,EAAArD,OAAAsD,EAAA,EAAAtD,CAAAmD,EAAA,GAGlB4K,EAHkB1K,EAAA,GAGR2K,EAHQ3K,EAAA,GAInB4K,EAAalC,QAAQgC,GAW3B,SAASG,IACLF,EAAY,MAGhB,IAAMG,EACFnK,EAAAC,EAAAC,cAACkK,GAAAnK,EAAD,CAAQ8J,SAAUA,EAAUvJ,KAAMyJ,EAAYvJ,QAASwJ,GACnDlK,EAAAC,EAAAC,cAACmK,GAAApK,EAAD,CAAYe,aAAS,GAArB,WACAhB,EAAAC,EAAAC,cAACmK,GAAApK,EAAD,CAAYe,QAZpB,WACII,EAAa,CAAE9F,KAAM,iBACrB4O,MAUI,WAIR,OACIlK,EAAAC,EAAAC,cAAA,UAAQe,UAAU,mBACdjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,yBACZjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,2BACZjB,EAAAC,EAAAC,cAACoK,GAAD,OAEJtK,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,QAAMe,UAAU,0BACZjB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,0BACZjB,EAAAC,EAAAC,cAACqK,GAAD,OAEHzC,GACG9H,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,CAAce,QAjC9B,SAA+BgB,GAC3BgI,EAAYhI,EAAMyI,iBAiCFzK,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAiBgB,UAAU,qBAItCkJ,KCnCEQ,oBAdI,WAAM,IAGjBC,EAAoB,CAAC,eAIzB,OANoBjO,IAAZkO,QAGI3P,gBACR0P,EAAkBE,KAAK,qBAGvB9K,EAAAC,EAAAC,cAAA,QAAMe,UAAW2J,EAAkBG,KAAK,MACpC/K,EAAAC,EAAAC,cAACqK,GAAD,SCFGS,YARE,WAAM,IACXtB,EAAc/M,IAAd+M,UAIR,OAAO1J,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WAAWD,QAHZ,WACjB0I,EAAU,CAAEpO,KAAM,4BCiCX2P,OA9Bf,WAAe,IAGPC,EAHO/B,EACoBxM,IAAvBkO,EADG1B,EACH0B,QAASnG,EADNyE,EACMzE,UACXoD,EAAeC,QAAQrD,EAAUlJ,OAKvC,OAHIqP,EAAQ3P,iBACRgQ,EAAWlL,EAAAC,EAAAC,cAACiL,GAAD,OAGXnL,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACXjB,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAACkL,GAAD,MACApL,EAAAC,EAAAC,cAACmL,GAAD,MACCH,EACDlL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoL,EAAA,EAAD,KACKxD,GAAgB9H,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUC,KAAK,IAAI1B,GAAG,UAAU2B,OAAK,IACrD1D,GAAgB9H,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUC,KAAK,QAAQ1B,GAAG,UAAU2B,OAAK,KAExD1D,GAAgB9H,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOG,KAAK,QAAQC,UAAWvK,IAChD2G,GAAgB9H,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOG,KAAK,YAAYC,UAAWC,IACpD3L,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOG,KAAK,UAAUC,UAAWE,KAE/B9D,GAAgB9H,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUzB,GAAG,eCzBvDgC,IAASC,OACL9L,EAAAC,EAAAC,cAAC6L,EAAA,iBAAD,CAAkBrO,MAAOA,GACrBsC,EAAAC,EAAAC,cnBAqB,SAAAnB,GAAuB,IAApBuF,EAAoBvF,EAApBuF,SAAoB0H,EACnBC,qBAAW9Q,EAAWF,GADHiR,EAAAlQ,OAAAsD,EAAA,EAAAtD,CAAAgQ,EAAA,GACzCnB,EADyCqB,EAAA,GAChCxC,EADgCwC,EAAA,GAAAC,EAEdF,qBAAWtQ,EAAaJ,GAFV6Q,EAAApQ,OAAAsD,EAAA,EAAAtD,CAAAmQ,EAAA,GAEzCzH,EAFyC0H,EAAA,GAE9BhL,EAF8BgL,EAAA,GAAAC,EAGVJ,qBAAWlQ,EAAeH,GAHhB0Q,EAAAtQ,OAAAsD,EAAA,EAAAtD,CAAAqQ,EAAA,GAGzC9D,EAHyC+D,EAAA,GAG5B3D,EAH4B2D,EAAA,GAAAC,EAINN,qBAAW7P,EAAiBF,GAJtBsQ,EAAAxQ,OAAAsD,EAAA,EAAAtD,CAAAuQ,EAAA,GAM1CE,EAAuB,CACzB5B,UACAnB,YACAhF,YACAtD,eACAmH,cACAI,iBACAW,cAb4CkD,EAAA,GAc5CpD,iBAd4CoD,EAAA,IAiBhD,OAAOxM,EAAAC,EAAAC,cAACzD,EAAaiQ,SAAd,CAAuBtK,MAAOqK,GAAYnI,ImBjB7C,KACItE,EAAAC,EAAAC,cAACyM,GAAD,QAGRC,SAASC,eAAe","file":"static/js/main.94c05194.chunk.js","sourcesContent":["import { Dispatch } from 'react';\n\nexport interface UIStore {\n    UIState: UIState;\n    UIDisptch: Dispatch<UIActions>;\n}\n\nexport interface UIState {\n    isSideDrawOpen: boolean;\n}\n\nexport const initialUIState = { isSideDrawOpen: false };\n\nexport const UIReducer = (state: UIState, action: UIActions) => {\n    switch (action.type) {\n        case 'UI_TOGGLE_SIDE_NAV':\n            return { isSideDrawOpen: !state.isSideDrawOpen };\n        default:\n            return state || initialUIState;\n    }\n};\n\n//Actions\ninterface UIToggleSideNav {\n    type: 'UI_TOGGLE_SIDE_NAV';\n}\n\ntype UIActions = UIToggleSideNav;\n","import { Dispatch } from 'react';\n\nexport interface AuthStore {\n    AuthState: AuthState;\n    AuthDispatch: Dispatch<AuthActions>;\n}\n\nexport interface AuthState {\n    userId: string | null;\n    token: string | null;\n    tokenExpiration: number | null;\n}\n\nexport const initialAuthState: AuthState = { token: null, userId: null, tokenExpiration: null };\n\nexport const AuthReducer = (state: AuthState, action: AuthActions): AuthState => {\n    switch (action.type) {\n        case 'AUTH_LOG_IN':\n            const { token, userId, tokenExpiration } = action;\n            return { token, userId, tokenExpiration };\n        case 'AUTH_LOG_OUT':\n            return initialAuthState;\n        default:\n            return state || initialAuthState;\n    }\n};\n\n// Actions\ninterface AuthLogIn {\n    type: 'AUTH_LOG_IN';\n    userId: AuthState['userId'];\n    token: AuthState['token'];\n    tokenExpiration: AuthState['tokenExpiration'];\n}\n\ninterface AuthLogOut {\n    type: 'AUTH_LOG_OUT';\n}\n\ntype AuthActions = AuthLogIn | AuthLogOut;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\n\nexport interface EventsStore {\n    EventsState: EventsState;\n    EventsDispatch: Dispatch<EventsActions>;\n}\n\nexport interface Event {\n    _id: string;\n    title: string;\n    description: string;\n    price: number;\n    date: string;\n    creator: Array<any>;\n}\n\nexport interface EventsState {\n    status: Status;\n    events: Array<Event>;\n}\n\nexport const initialEventsState: EventsState = { events: [], status: 'PRISTINE' };\n\nexport const EventsReducer = (state: EventsState, action: EventsActions): EventsState => {\n    switch (action.type) {\n        case 'FETCH_EVENTS_PENDING':\n            return { events: [...state.events], status: 'PENDING' };\n        case 'FETCH_EVENTS_FULFILLED':\n            return { events: [...action.events], status: 'FULFILLED' };\n        case 'FETCH_EVENTS_REJECTED':\n            return { events: [...state.events], status: 'REJECTED' };\n        default:\n            return state || initialEventsState;\n    }\n};\n\n// Actions\ninterface FetchEventsPending {\n    type: 'FETCH_EVENTS_PENDING';\n}\n\ninterface FetchEventsRejected {\n    type: 'FETCH_EVENTS_REJECTED';\n}\ninterface FetchEventsFulfilled {\n    type: 'FETCH_EVENTS_FULFILLED';\n    events: EventsState['events'];\n}\n\ntype EventsActions = FetchEventsPending | FetchEventsRejected | FetchEventsFulfilled;\n","import { Dispatch } from 'react';\nimport { Status } from './utils/types';\nimport { IBooking } from '../../shared/models/booking.model';\n\nexport interface BookingsStore {\n    BookingsState: BookingsState;\n    BookingsDispatch: Dispatch<BookingsActions>;\n}\n\nexport interface BookingsState {\n    status: Status;\n    bookings: Array<IBooking>;\n}\n\nexport const initialBookingsState: BookingsState = { bookings: [], status: 'PRISTINE' };\n\nexport const BookingsReducer = (state: BookingsState, action: BookingsActions): BookingsState => {\n    switch (action.type) {\n        case 'FETCH_BOOKINGS_PENDING':\n        case 'CANCEL_BOOKINGS_PENDING':\n            return { bookings: [...state.bookings], status: 'PENDING' };\n        case 'FETCH_BOOKINGS_FULFILLED':\n            return { bookings: [...action.bookings], status: 'FULFILLED' };\n        case 'CANCEL_BOOKINGS_FULFILLED':\n            const updatedBookings = state.bookings.filter(booking => action.bookingId !== booking._id);\n            return { bookings: updatedBookings, status: 'FULFILLED' };\n        case 'FETCH_BOOKINGS_REJECTED':\n        case 'CANCEL_BOOKINGS_REJECTED':\n            return { bookings: [...state.bookings], status: 'REJECTED' };\n        default:\n            return state || initialBookingsState;\n    }\n};\n\n// Actions\ninterface BookingsPending {\n    type: 'FETCH_BOOKINGS_PENDING' | 'CANCEL_BOOKINGS_PENDING';\n}\n\ninterface bookingsRejected {\n    type: 'FETCH_BOOKINGS_REJECTED' | 'CANCEL_BOOKINGS_REJECTED';\n}\ninterface fetchBookingsFulfilled {\n    type: 'FETCH_BOOKINGS_FULFILLED';\n    bookings: BookingsState['bookings'];\n}\ninterface cancelBookingsFulfilled {\n    type: 'CANCEL_BOOKINGS_FULFILLED';\n    bookingId: IBooking['_id'];\n}\n\ntype BookingsActions = BookingsPending | bookingsRejected | fetchBookingsFulfilled | cancelBookingsFulfilled;\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialUIState, UIReducer, UIStore } from './Reducers/ui.reducer';\nimport { initialAuthState, AuthReducer, AuthStore } from './Reducers/auth.reducer';\nimport { EventsStore, initialEventsState, EventsReducer } from './Reducers/events.reducer';\nimport { BookingsStore, initialBookingsState, BookingsReducer } from './Reducers/bookings.reducer';\n\ntype MainStore = UIStore & AuthStore & EventsStore & BookingsStore;\n\nconst StateContext = createContext({} as MainStore);\n\nexport const StateProvider = ({ children }: any) => {\n    const [UIState, UIDisptch] = useReducer(UIReducer, initialUIState);\n    const [AuthState, AuthDispatch] = useReducer(AuthReducer, initialAuthState);\n    const [EventsState, EventsDispatch] = useReducer(EventsReducer, initialEventsState);\n    const [BookingsState, BookingsDispatch] = useReducer(BookingsReducer, initialBookingsState);\n\n    const MainStore: MainStore = {\n        UIState,\n        UIDisptch,\n        AuthState,\n        AuthDispatch,\n        EventsState,\n        EventsDispatch,\n        BookingsState,\n        BookingsDispatch,\n    };\n\n    return <StateContext.Provider value={MainStore}>{children}</StateContext.Provider>;\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","import { createMuiTheme } from '@material-ui/core';\n\ninterface AppClasses {\n    primaryButton: React.CSSProperties;\n    modalCentered: React.CSSProperties;\n    card: React.CSSProperties;\n}\n\nexport const appClasses: AppClasses = {\n    primaryButton: {\n        margin: '0.25rem 0.1rem',\n    },\n    modalCentered: {\n        top: '50%',\n        left: '50%',\n        transform: `translate(-50%, -50%)`,\n    },\n    card: {\n        width: '30rem',\n        margin: '0.5rem auto',\n        maxWidth: '80%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n};\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#800080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n","interface EnvironmentVariables {\n    BACKEND_URL: string;\n}\n\ninterface ConfigVars {\n    [key: string]: EnvironmentVariables;\n}\n\nconst configVars: ConfigVars = {\n    production: {\n        BACKEND_URL: 'https://easy-event-0.herokuapp.com',\n    },\n    development: {\n        BACKEND_URL: 'http://localhost:3000',\n    },\n};\n\nconst getConfig = (environment: any): EnvironmentVariables => {\n    return configVars[environment];\n};\n\ninterface Config extends EnvironmentVariables {\n    getGraphqlUrl: () => string;\n}\n\nconst config: Config = {\n    ...getConfig(process.env.REACT_APP_STAGE),\n\n    // Add common config values here\n    getGraphqlUrl: function() {\n        return this.BACKEND_URL + '/graphql';\n    },\n};\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, Button, Snackbar, IconButton } from '@material-ui/core';\nimport { IStyles } from '../../shared/models/styles.model';\nimport { Close } from '@material-ui/icons';\n\nconst style = (theme: Theme): IStyles => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\ntype Props = {\n    message: string;\n    duration?: number; // in seconds\n    centered?: boolean;\n};\n\ntype PropsWithStyles = Props & WithStyles<'close'>;\n\nconst AppSnackbar: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const [snackbarOpen, setSnackbarOpen] = useState(true);\n    const { message, duration, centered } = props;\n\n    function handleClose() {\n        setSnackbarOpen(false);\n    }\n\n    useEffect(() => {\n        if (duration !== null && duration !== undefined) {\n            setTimeout(() => {\n                setSnackbarOpen(false);\n            }, duration);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: centered ? 'center' : 'left',\n                }}\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{message}</span>}\n                action={[\n                    <Button\n                        color=\"secondary\"\n                        aria-label=\"Close\"\n                        onClick={handleClose}\n                        className={classes.close}\n                        key=\"close\"\n                    >\n                        DISMISS\n                    </Button>,\n                ]}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(style as any)(AppSnackbar);\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nimport './auth.scss';\nimport { useStateValue } from '../../Store/Store';\nimport { appClasses } from '../../shared/styles/styles';\nimport config from '../../config';\nimport AppSnackbar from '../sharedComponents/AppSnackbar';\n\ntype AuthFormState = 'PRISTINE' | 'ERROR' | 'LOGIN_WRONG_CREDENTIALS' | 'SIGNUP_USER_EXISTS' | 'SIGNUP_SUCCESS';\n\nconst AuthPage = () => {\n    const { AuthDispatch } = useStateValue();\n\n    const [isLoginForm, setIsLogInForm] = useState(true);\n    const [authFormState, setAuthFormState] = useState('PRISTINE' as AuthFormState);\n\n    const inputEmail = useRef({} as HTMLInputElement);\n    const inputPassword = useRef({} as HTMLInputElement);\n\n    const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        setAuthFormState('PRISTINE'); //important as snackbar appear only when state changes\n\n        event.preventDefault();\n        const email = inputEmail.current.value.trim();\n        const password = inputPassword.current.value.trim();\n        if (!email || !password) {\n            return;\n        }\n\n        const signUpData = {\n            query: `\n            mutation {\n                createUser(userInput: {email:\"${email}\", password:\"${password}\"}) {\n                  _id\n                  email\n                }\n              }\n            `,\n        };\n        const loginData = {\n            query: `\n            query {\n                login(email:\"${email}\", password:\"${password}\") {\n                  userId\n                  token\n                  tokenExpiration\n                }\n              }\n            `,\n        };\n        axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: isLoginForm ? loginData : signUpData,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    setAuthFormState('ERROR');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                switch (isLoginForm) {\n                    case true: // is login form\n                        if (!resData.login) {\n                            setAuthFormState('LOGIN_WRONG_CREDENTIALS');\n                            return;\n                        }\n\n                        const { token, userId, tokenExpiration } = resData.login;\n                        AuthDispatch({ type: 'AUTH_LOG_IN', token, userId, tokenExpiration });\n                        return;\n\n                    case false: // is signup form\n                        if (!resData.createUser) {\n                            setAuthFormState('SIGNUP_USER_EXISTS');\n                            return;\n                        }\n                        setAuthFormState('SIGNUP_SUCCESS');\n                        return;\n                }\n            })\n            .catch(err => {\n                setAuthFormState('ERROR');\n            });\n    };\n\n    return (\n        <React.Fragment>\n            {authFormState === 'LOGIN_WRONG_CREDENTIALS' && <AppSnackbar message=\"Wrong credentials\" centered />}\n            {authFormState === 'SIGNUP_USER_EXISTS' && <AppSnackbar message=\"User already exists\" centered />}\n            {authFormState === 'SIGNUP_SUCCESS' && (\n                <AppSnackbar message=\"User Creation have been SUCCESFULL\" centered />\n            )}\n            {authFormState === 'ERROR' && (\n                <AppSnackbar message=\"Error!: Check connection or call administrator\" centered />\n            )}\n\n            <form className=\"auth-page\" onSubmit={submitHandler}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input type=\"email\" id=\"email\" ref={inputEmail} />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" ref={inputPassword} />\n                </div>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                    {isLoginForm ? 'Login' : 'Signup'}\n                </Button>\n                <span />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"button\"\n                    style={appClasses.primaryButton}\n                    onClick={_ => setIsLogInForm(!isLoginForm)}\n                >\n                    Switch to {isLoginForm ? 'Signup' : 'Login'}\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Theme, withStyles, WithStyles } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport { IStyles } from '../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        maxWidth: '80%',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        outline: 'none',\n    },\n});\n\ntype Props = {\n    children: JSX.Element;\n};\n\ntype PropsWithStyles = Props & WithStyles<'paper'>;\n\nconst AppModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    return (\n        <div className={classes.paper} style={appClasses.modalCentered}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default withStyles(style as any)(AppModalContent);\n","import React, { useRef, useState } from 'react';\nimport { Theme, withStyles, WithStyles, Typography, Divider, Button, FormGroup, TextField } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\nimport AppModalContent from '../sharedComponents/AppModalContent';\nimport { Alarm } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, InlineDatePicker, InlineTimePicker } from 'material-ui-pickers';\nimport DateFNSUtils from '@date-io/date-fns';\nimport { setHours, getHours, setDayOfYear, getDayOfYear, setMinutes, getMinutes } from 'date-fns';\nimport classNames from 'classnames';\n\nimport './createEventModalContent.scss';\nimport Axios from 'axios';\nimport { useStateValue } from '../../Store/Store';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        padding: '0.3rem 1.5rem',\n    },\n    content: {\n        margin: '1.5rem',\n    },\n    actions: {},\n});\n\ntype Props = {\n    closeModal: any;\n    fetchEvents: any;\n};\n\ntype PropsWithStyles = Props & WithStyles<'header' | 'content' | 'actions'>;\n\nconst CreateEventModalContent: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState } = useStateValue();\n    const [selectedDayOfTeYear, HandleDayOfTheYearChange] = useState(new Date());\n    const [selectedTime, handleTimeChange] = useState(new Date());\n\n    const inputTitle = useRef({} as HTMLInputElement);\n    const inputDescription = useRef({} as HTMLInputElement);\n    const inputPrice = useRef({} as HTMLInputElement);\n\n    function constructModifiedDate(selectedDayOfTeYear: Date, selectedTime: Date) {\n        if (!selectedDayOfTeYear || !selectedTime) {\n            throw new Error('Date and time must be selected');\n        }\n        let modifiedDate = new Date();\n        modifiedDate = setDayOfYear(modifiedDate, getDayOfYear(selectedDayOfTeYear));\n        modifiedDate = setHours(modifiedDate, getHours(selectedTime));\n        modifiedDate = setMinutes(modifiedDate, getMinutes(selectedTime));\n        return modifiedDate.toISOString();\n    }\n\n    function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        const title = inputTitle.current.value.trim();\n        const description = inputDescription.current.value.trim();\n        const price = inputPrice.current.value.trim();\n        const date = constructModifiedDate(selectedDayOfTeYear, selectedTime);\n\n        if (!title || !description || !price || !date) {\n            throw new Error('All input must be selected');\n        }\n\n        const requestBody = {\n            query: `mutation {\n                createEvent(eventInput: {title: \"${title}\", description: \"${description}\",\n                price: ${parseFloat(price)}, date: \"${date}\"}) {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                }\n            }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                console.log(resData);\n                props.fetchEvents();\n                props.closeModal();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <AppModalContent>\n            <React.Fragment>\n                <Typography className={classes.header} variant=\"h6\">\n                    Create Event\n                </Typography>\n\n                <form\n                    className={classNames(classes.content, 'create-event-modal-content__form')}\n                    onSubmit={submitHandler}\n                >\n                    <FormGroup className=\"create-event-modal-content__title\">\n                        <TextField id=\"title\" variant=\"outlined\" label=\"Title\" inputRef={inputTitle} />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__description\">\n                        <TextField\n                            id=\"description\"\n                            variant=\"outlined\"\n                            label=\"description\"\n                            inputRef={inputDescription}\n                        />\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__date\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineDatePicker\n                                keyboard\n                                clearable\n                                variant=\"outlined\"\n                                label=\"Date\"\n                                onChange={HandleDayOfTheYearChange}\n                                value={selectedDayOfTeYear}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__time\">\n                        <MuiPickersUtilsProvider utils={DateFNSUtils}>\n                            <InlineTimePicker\n                                keyboard\n                                variant=\"outlined\"\n                                keyboardIcon={<Alarm />}\n                                label=\"Time\"\n                                onChange={handleTimeChange}\n                                value={selectedTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormGroup>\n\n                    <FormGroup className=\"create-event-modal-content__price\">\n                        <TextField id=\"price\" variant=\"outlined\" label=\"price\" inputRef={inputPrice} />\n                    </FormGroup>\n\n                    <Divider className=\"create-event-modal-content__actions-divider\" />\n                    <div className={classNames(classes.actions, 'create-event-modal-content__actions')}>\n                        <Button\n                            variant=\"text\"\n                            color=\"primary\"\n                            onClick={props.closeModal}\n                            style={appClasses.primaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={appClasses.primaryButton}>\n                            Create\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        </AppModalContent>\n    );\n};\n\nexport default withStyles(style as any)(CreateEventModalContent);\n","import React from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport Axios from 'axios';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport config from '../../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst EventItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    function bookEventHandler() {\n        if (!userLoggedIn) {\n            alert('you should log in to book an event');\n            return;\n        }\n        const requestBody = {\n            query: `mutation {\n                bookEvent(eventId: \"${event._id}\") {\n                  _id\n                  createdAt\n                  updatedAt\n                }\n              }`,\n        };\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                console.log(resData);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    const { AuthState } = useStateValue();\n    const { event } = props;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === event.creator._id;\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={event.title}\n                action={\n                    isThisUser && (\n                        <IconButton aria-label=\"Edit\">\n                            <Create fontSize=\"small\" />\n                        </IconButton>\n                    )\n                }\n            />\n            <CardContent className={classes.cardContent}>\n                <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {event.description}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                        {new Date(event.date).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"h6\">{event.price} USD </Typography>\n                </span>\n                {isThisUser && (\n                    <span className={classes.cardContentItem}>\n                        <Typography variant=\"caption\">You are the owner of this event</Typography>\n                    </span>\n                )}\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button variant=\"text\">Details</Button>\n                {!isThisUser && (\n                    <Button variant=\"text\" color=\"primary\" onClick={bookEventHandler}>\n                        Book this\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n};\n\ntype Props = {\n    event: any;\n    classes: any;\n};\n\nexport default withStyles(style as any)(EventItem);\n","import React from 'react';\nimport EventItem from './EventItem';\nimport { withStyles, WithStyles, Theme } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({});\n\ntype PropsWithStyles = Props & WithStyles<''>;\n\nconst EventsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { EventsState } = useStateValue();\n    const EventsList = EventsState.events.map((event: any) => <EventItem event={event} key={event._id} />);\n\n    return <section>{EventsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsList);\n","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Card, Modal, Typography, Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport '../../index.scss';\nimport CreateEventModalContent from './CreateEventModalContent';\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport EventsList from './EventsList/EventsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'card'>;\n\nconst EventsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { EventsDispatch } = useStateValue();\n    // useState(1) is because 0 doesn't render the component\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n        const requestBody = {\n            query: `query {\n                events {\n                    _id\n                    title\n                    description\n                    date\n                    price\n                    creator{\n                        _id\n                        email\n                    }\n                }\n            }`,\n        };\n\n        EventsDispatch({ type: 'FETCH_EVENTS_PENDING' });\n\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                EventsDispatch({ type: 'FETCH_EVENTS_FULFILLED', events: resData.events });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                EventsDispatch({ type: 'FETCH_EVENTS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    const { AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [isModalOpen, setModalOpen] = useState(false);\n    function closeModal() {\n        setModalOpen(false);\n    }\n\n    return (\n        <div className=\"events-page app-centered-page\">\n            {Boolean(progress) && <LinearProgress variant=\"determinate\" value={progress} />}\n            {userLoggedIn && (\n                <React.Fragment>\n                    <Card className={classes.card}>\n                        <Typography>Share your own Event!</Typography>\n\n                        <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={_ => setModalOpen(true)}>\n                            Create Event\n                        </Button>\n                    </Card>\n                    <Modal open={isModalOpen} onClose={_ => setModalOpen(false)}>\n                        <CreateEventModalContent closeModal={closeModal} fetchEvents={fetchEvents} />\n                    </Modal>\n                </React.Fragment>\n            )}\n            <EventsList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(EventsPage);\n","import React from 'react';\nimport {\n    Card,\n    Typography,\n    Theme,\n    withStyles,\n    WithStyles,\n    CardContent,\n    CardHeader,\n    IconButton,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { appClasses } from '../../../shared/styles/styles';\nimport { Create, Delete } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\nimport { IBooking } from '../../../shared/models/booking.model';\nimport Axios from 'axios';\nimport config from '../../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n    cardContent: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        margin: '-1rem 0', // gutter hack :-(\n    },\n    cardContentItem: {\n        margin: '1rem 0', // gutter hack :-(\n        flex: '1 0 200px',\n    },\n    cardHeader: {\n        width: '90%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    cardDescription: {\n        marginRight: '1rem',\n    },\n    cardActions: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\ntype PropsWithStyles = Props &\n    WithStyles<'card' | 'cardContent' | 'cardHeader' | 'cardContentItem' | 'cardDescription' | 'cardActions'>;\n\nconst BookingItem: React.SFC<PropsWithStyles> = ({ classes, ...props }: PropsWithStyles) => {\n    const { AuthState, BookingsDispatch } = useStateValue();\n    const { booking } = props;\n    const { event } = booking;\n    const userLoggedIn = Boolean(AuthState.token);\n    const isThisUser = AuthState.userId === booking.event.creator._id;\n    function deleteBookingHandler() {\n        if (!userLoggedIn) {\n            alert('you should log in to cancel an event');\n            return;\n        }\n        const requestBody = {\n            query: `mutation {\n                cancelBooking(bookingId: \"${booking._id}\") {\n                  _id\n                  title\n                }\n              }`,\n        };\n        BookingsDispatch({ type: 'CANCEL_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_FULFILLED', bookingId: booking._id });\n\n                console.log(resData);\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'CANCEL_BOOKINGS_REJECTED' });\n\n                console.log(err);\n            });\n    }\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={event.title}\n                action={\n                    <React.Fragment>\n                        {isThisUser && (\n                            <IconButton aria-label=\"Edit\">\n                                <Create fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"Delete\" onClick={deleteBookingHandler}>\n                            <Delete fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n            <CardContent className={classes.cardContent}>\n                <span className={classNames(classes.cardContentItem, classes.cardDescription)}>\n                    <Typography variant=\"body1\" gutterBottom>\n                        {event.description}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                        {new Date(event.date).toLocaleString()}\n                    </Typography>\n                    <Typography variant=\"h6\">{event.price} USD </Typography>\n                </span>\n                {isThisUser && (\n                    <span className={classes.cardContentItem}>\n                        <Typography variant=\"caption\">You are the owner of this event</Typography>\n                    </span>\n                )}\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button variant=\"text\">Details</Button>\n            </CardActions>\n        </Card>\n    );\n};\n\ntype Props = {\n    booking: IBooking;\n    classes: any;\n};\n\nexport default withStyles(style as any)(BookingItem);\n","import React from 'react';\nimport BookingItem from './BookingItem';\nimport { withStyles, WithStyles, Theme } from '@material-ui/core';\nimport { useStateValue } from '../../../Store/Store';\nimport { IStyles } from '../../../shared/models/styles.model';\n\nconst style = (theme: Theme): IStyles => ({});\n\ntype PropsWithStyles = Props & WithStyles<''>;\n\nconst BookingsList: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    const { BookingsState } = useStateValue();\n    const BookingsList = BookingsState.bookings.map((booking: any) => (\n        <BookingItem booking={booking} key={booking._id} />\n    ));\n\n    return <section>{BookingsList}</section>;\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsList);\n","import React, { useState, useEffect } from 'react';\nimport { Theme, withStyles, WithStyles, LinearProgress } from '@material-ui/core';\nimport { appClasses } from '../../shared/styles/styles';\n\nimport { useStateValue } from '../../Store/Store';\nimport Axios from 'axios';\nimport BookingList from './BookingsList/BookingsList';\nimport { IStyles } from '../../shared/models/styles.model';\nimport config from '../../config';\n\nconst style = (theme: Theme): IStyles => ({\n    card: { ...appClasses.card },\n});\n\ntype PropsWithStyles = Props & WithStyles<'list' | 'card'>;\n\nconst BookingsPage: React.SFC<PropsWithStyles> = ({ classes }: PropsWithStyles) => {\n    let _isActive: boolean = true;\n    const { BookingsDispatch, AuthState } = useStateValue();\n    // useState(1) is because 0 doesn't render the component\n    const [progress, setProgress] = useState(1);\n    function fetchEvents() {\n        if (_isActive) {\n            setProgress(10);\n        }\n\n        const requestBody = {\n            query: `query {\n                bookings {\n                    _id\n                    createdAt\n                    event {\n                        _id\n                        title\n                        date\n                        price\n                        creator {\n                            _id\n                        }\n                    }\n                }\n            }`,\n        };\n        BookingsDispatch({ type: 'FETCH_BOOKINGS_PENDING' });\n        Axios({\n            url: config.getGraphqlUrl(),\n            method: 'POST',\n            data: requestBody,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + AuthState.token,\n            },\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n                }\n                if (res.data) {\n                    return res.data.data;\n                }\n            })\n            .then(resData => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_FULFILLED', bookings: resData.bookings });\n                if (_isActive) {\n                    setProgress(100);\n                }\n            })\n            .catch(err => {\n                BookingsDispatch({ type: 'FETCH_BOOKINGS_REJECTED' });\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    if (_isActive) {\n                        setProgress(0);\n                    }\n                }, 300);\n            });\n    }\n\n    useEffect(() => {\n        fetchEvents();\n        return () => {\n            _isActive = false;\n        };\n    }, []);\n\n    return (\n        <div className=\"bookins-page .app-centered-page\">\n            {Boolean(progress) && <LinearProgress variant=\"determinate\" value={progress} />}\n            <BookingList />\n        </div>\n    );\n};\n\ntype Props = {};\n\nexport default withStyles(style as any)(BookingsPage);\n","import React from 'react';\n\nimport './drawerToggleButton.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst DrawerToggleButton = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return (\n        <button className=\"drawer-toggle-button\" onClick={clickHandler}>\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n            <div className=\"drawer-toggle-button__line\" />\n        </button>\n    );\n};\n\nexport default DrawerToggleButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useStateValue } from '../../Store/Store';\n\nconst NavigationItems = () => {\n    const { AuthState } = useStateValue();\n    return (\n        <nav>\n            <ul>\n                {!AuthState.token && (\n                    <li>\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </li>\n                )}\n                <li>\n                    <NavLink to=\"/events\">Events</NavLink>\n                </li>\n                {AuthState.token && (\n                    <li>\n                        <NavLink to=\"/bookings\">Bookings</NavLink>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavigationItems;\n","import React, { useState } from 'react';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport NavigationItems from './NavigationItems';\nimport MuIconButton from '@material-ui/core/IconButton';\nimport MuAccountCircle from '@material-ui/icons/AccountCircle';\nimport MuMenu from '@material-ui/core/Menu';\nimport MuMenuItem from '@material-ui/core/MenuItem';\n\nimport './mainNavigation.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst MainNavigation = () => {\n    const { AuthState, AuthDispatch } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    const [anchorEl, setAnchorEl] = useState();\n    const isMenuOpen = Boolean(anchorEl);\n\n    function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLogout() {\n        AuthDispatch({ type: 'AUTH_LOG_OUT' });\n        closeMenu();\n    }\n\n    function closeMenu() {\n        setAnchorEl(null);\n    }\n\n    const renderMenu = (\n        <MuMenu anchorEl={anchorEl} open={isMenuOpen} onClose={closeMenu}>\n            <MuMenuItem onClick={void 0}>Profile</MuMenuItem>\n            <MuMenuItem onClick={handleLogout}>Logout</MuMenuItem>\n        </MuMenu>\n    );\n\n    return (\n        <header className=\"main-navigation\">\n            <span className=\"main-navigation__logo\">\n                <span className=\"main-navigation__button\">\n                    <DrawerToggleButton />\n                </span>\n                <h1>EasyEvent</h1>\n            </span>\n            <span className=\"main-navigation__items\">\n                <span className=\"main-navigation__links\">\n                    <NavigationItems />\n                </span>\n                {userLoggedIn && (\n                    <MuIconButton onClick={handleProfileMenuOpen}>\n                        <MuAccountCircle className=\"account-circle\" />\n                    </MuIconButton>\n                )}\n            </span>\n            {renderMenu}\n        </header>\n    );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport NavigationItems from './NavigationItems';\n\nimport './sideDrawer.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst SideDrawer = () => {\n    const { UIState } = useStateValue();\n\n    let sideDrawerClasses = ['side-drawer'];\n    if (UIState.isSideDrawOpen) {\n        sideDrawerClasses.push('side-drawer__open');\n    }\n    return (\n        <span className={sideDrawerClasses.join(' ')}>\n            <NavigationItems />\n        </span>\n    );\n};\n\nexport default SideDrawer;\n","import React from 'react';\n\nimport './backdrop.scss';\nimport { useStateValue } from '../../Store/Store';\n\nconst Backdrop = () => {\n    const { UIDisptch } = useStateValue();\n    const clickHandler = () => {\n        UIDisptch({ type: 'UI_TOGGLE_SIDE_NAV' });\n    };\n    return <div className=\"backdrop\" onClick={clickHandler} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './components/Auth/Auth';\nimport EventsPage from './components/Events/Events';\nimport BookingsPage from './components/Bookings/Bookings';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport './app.scss';\nimport SideDrawer from './components/Navigation/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport { useStateValue } from './Store/Store';\n\nfunction App() {\n    const { UIState, AuthState } = useStateValue();\n    const userLoggedIn = Boolean(AuthState.token);\n    let backdrop;\n    if (UIState.isSideDrawOpen) {\n        backdrop = <Backdrop />;\n    }\n    return (\n        <div className=\"main-content\">\n            <BrowserRouter>\n                <MainNavigation />\n                <SideDrawer />\n                {backdrop}\n                <main>\n                    <Switch>\n                        {userLoggedIn && <Redirect from=\"/\" to=\"/events\" exact />}\n                        {userLoggedIn && <Redirect from=\"/auth\" to=\"/events\" exact />}\n\n                        {!userLoggedIn && <Route path=\"/auth\" component={AuthPage} />}\n                        {userLoggedIn && <Route path=\"/bookings\" component={BookingsPage} />}\n                        <Route path=\"/events\" component={EventsPage} />\n\n                        {!userLoggedIn && <Redirect to=\"/auth\" />}\n                    </Switch>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './Store/Store';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { theme } from './shared/styles/styles';\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <StateProvider>\n            <App />\n        </StateProvider>\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}